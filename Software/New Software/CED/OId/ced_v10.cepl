; Centurion EDitor by ren14500. Public domain.
TITLE 'CED'
SYSTEM ZCED(MAIN,EXP=D,LL=80)  ; 80 col display w/numbers - only 75 actual text.
FILE CRT:SYSIPT,CLASS=0,SEQ    ; CRT for user interaction.
FILE INFILE:SYS000,CLASS=1,SEQ ; Input file.
FILE TMPFILE:SYS001,CLASS=1,SEQ; Temporary file.
STRING CURRLINE(75),CMD(1)     ; Strings to read lines and the command.
INTEGER CURR,START,FINISH      ; Current line, start line, finish line.
SET MAXLINE:9999               ; Maximum lines supported.
FORMAT FULLLINE:C75            ; A full line is 75 characters.
FORMAT CMDINPUT:C1             ; Command input is 1 character.
FORMAT INTINPUT:N4             ; Integer input up to 4 characters.
FORMAT PRINTLINE:N4,X1,C75     ; Display 4 character line number, space, text.
ENTRYPOINT CRT,INFILE,TMPFILE  ; Files are used by external commands.
ENTRY
OPEN IO (CRT,INFILE,TMPFILE)   ; Open all files for input and output.
WRITE(CRT,FULLLINE)'CED 1.0'   ; Splash screen.
; Main loop start.
TOP:
  ; Start at line one of the file, prompt for the next command.
  CURR=1
  REWIND INFILE,TMPFILE
  WRITEN(CRT,FULLLINE)'COMMAND>'
  READ(CRT,CMDINPUT)CMD
  ; Quit.
  IFS(CMD.EQ.'Q')GO TO DONE
  ; Print a section of the file.
  IFS(CMD.EQ.'P')DO
    CALL GETSF                      ; Get the start/finish range.
    LOOP WHILE (CURR.LE.FINISH)     ; Loop until finish lines read.
      READ(INFILE,FULLLINE)CURRLINE ; Read the next line.
      IF(STATUS.NE.0)CURR=FINISH    ; On error, assume we hit the end.
      ELSE DO
        IF(CURR.GE.START)WRITE(CRT,PRINTLINE)CURR,CURRLINE ; Print if >= start.
      END DO
      INCR CURR                     ; Another line read.
    END LOOP
  END DO
  ; Change a line.
  IFS(CMD.EQ.'C')DO
    CALL GETL                       ; Get the line to change.
    CALL COPYTOSTART                ; Copy lines up to the line to change.
    READ(INFILE,FULLLINE)CURRLINE   ; Ignore the line to change.
    READ(CRT,FULLLINE)CURRLINE      ; Get the replacement line.
    WRITE(TMPFILE,FULLLINE)CURRLINE ; Write it.
    START=MAXLINE                   ; Set maximum possible line number.
    CALL COPYTOSTART                ; Copy the rest of the file.
    CALL COPYBACK                   ; Copy from tmp back to main.
  END DO
  ; Delete a line.
  IFS(CMD.EQ.'D')DO
    CALL GETSF                      ; Get the line to change.
    CALL COPYTOSTART                ; Copy lines up to the line to change.
    LOOP WHILE(CURR.LE.FINISH)      ; Skip lines to delete.
      READ(INFILE,FULLLINE)CURRLINE ; Read the line.
      IF(STATUS.NE.0)CURR=FINISH    ; On error, assume we hit the end.
      INCR CURR                     ; Another line read.
    END LOOP
    START=MAXLINE                   ; Set maximum possible line number.
    CALL COPYTOSTART                ; Copy the rest of the file.
    CALL COPYBACK                   ; Copy from tmp back to main.
  END DO
  ; Append lines to the file.
  IFS(CMD.EQ.'A')DO
    START=MAXLINE                   ; Set maximum possible line number.
    CALL COPYTOSTART                ; Copy the file.
    CALL INSERTTODOT                ; Insert lines.
    CALL COPYBACK                   ; Copy from tmp back to main.
  END DO
  ; Insert lines before a line.
  IFS(CMD.EQ.'I')DO
    CALL GETL                       ; Get the line to insert before.
    CALL COPYTOSTART                ; Copy lines up to that.
    CALL INSERTTODOT                ; Insert lines.
    START=MAXLINE                   ; Set maximum possible line number.
    CALL COPYTOSTART                ; Copy the rest of the file.
    CALL COPYBACK                   ; Copy from tmp back to main.
  END DO
GO TO TOP                           ; Loop for the next command.
; Cleanup.
DONE:
CLOSE CRT
CLOSE INFILE
CLOSE TMPFILE
STOP 0
; Query for a line in START.
SUBROUTINE GETL
  WRITEN(CRT,FULLLINE)'LINE>'
  READ(CRT,INTINPUT)START
RETURN
; Query for START/FINISH.
SUBROUTINE GETSF
  WRITEN(CRT,FULLLINE)'START>'
  READ(CRT,INTINPUT)START
  WRITEN(CRT,FULLLINE)'FINISH>'
  READ(CRT,INTINPUT)FINISH
RETURN
; Insert text until '.'.
SUBROUTINE INSERTTODOT
  WRITE(CRT,FULLLINE)'. BY ITSELF TO END'
  ITDLOOP:
    READ(CRT,FULLLINE)CURRLINE
    IFS(CURRLINE.NE.'.')DO
      WRITE(TMPFILE,FULLLINE)CURRLINE
      GO TO ITDLOOP
    END DO
RETURN
; Copy up to, but not including, START, or EOF.
SUBROUTINE COPYTOSTART
  LOOP WHILE(CURR.LT.START)
    READ(INFILE,FULLLINE)CURRLINE
    IF(STATUS.EQ.0)WRITE(TMPFILE,FULLLINE)CURRLINE
    ELSE CURR=START
    INCR CURR
  END LOOP
RETURN
; Copy the tmp file back to the main file.
SUBROUTINE COPYBACK
  ENDFILE TMPFILE
  REWIND INFILE,TMPFILE
  CBLOOP:
    READ(TMPFILE,FULLLINE)CURRLINE
    IF(STATUS.EQ.0)DO
      WRITE(INFILE,FULLLINE)CURRLINE
      GO TO CBLOOP
    END DO
  ENDFILE INFILE
RETURN
; End of source.
END

