 title 'osslib -- os table blocks and values'
*
* 4/24/75 sharrock
* modified 9/17/75 by r christenson, extensions for alt. sectors and user isr
*  6/10/76  r christenson -- fdate, os5flg, and tflag added
*  6/15/76  r christenson -- fbflb added
*  8-29-76...added tbdflt   jim
*  10/4/76  r christenson -- atnflg added to comm reg
*  10/11/76 r christenson -- added indexed extension to rcb
* 12- 1-76...add svc to oss00, 1, and 2   jim
*  1-17-77...added pbntk   jim
*  1-18-77...added rdate and rerrs   jim
*  2- 3-77...added pbdsc,pbbst,pbbstl,pbddva to disk pub extension   jim
*  5- 9-77...modified indexed extension for rcb for final version of indexing system   jim
*  6-21-77...deleted 'sapad'    jim
*  7-13-77...added 'bmon00' and 'bmon05' for basic   jim
* 11-11-77...added pre-driver address slots in pub   jim
* 11-18-77...modified for cfas   jim
* 11- 7-78...@gbkv and @pbkv added to svc table     poole
* 11-10-78...@gprm and @pprm added to svc's     poole
* 12-05-78...tbtlck, tbjlck, wmflg, and tmlck added     poole
* 03-30-79...@stime and @ttime added poole
*  6-12-79...added @isrm to 30 and isrtb to 25   jim
* 01-02-80...cobol stuff added     poole
* 01-15-80...modified for sysgen     poole
* 04-23-80...added pdtbl and clc to commreg     poole
*  6/30/80   logical units added       j. chu
*  8/14/80   mstmap and piomap added        j. chu
* 09-02-80...cpmask added     poole
* 11/06/80   cdate, ctime, @rmemr, @gmemr, @tsr added       j. chu
* 11/12/80   @drnmb added       j. chu
* 05-27-81...added bgdate     poole
* 10-02-81...removed cobol stuff    poole
*
* 560 statements
*
*
(bmon00)
*
* static block description
*
?top equ 0
?lbot equ 2 line table bottom
?rbot equ 4 real store bottom
?ibot equ 6 integer store bottom
?sbot equ 8 string descriptor store bottom
?fbot equ 10 free string bottom
?curln equ 12 current line number
?cdata equ 14 current data pool address
?bdata equ 16 beginning data pool address
?cstop equ 18 call stack top
?csc equ 20 call stack count
?ic equ 21 current input channel
?oc equ 22 current output channel
?li equ 23 address of input line buffer
?lo equ 25 address of output line buffer
?fmp equ 27 format pointer
?fct equ 29 file count (number of files)
?fdtb equ 30 address of file description table
?ll equ 32 max line length
?rtb equ 34 record table addr (reccnt during init)
?trsw equ 36 trace switch
?trch equ 37 trace channel number
?wl equ 39 address of work line
?wc equ 41 wait counter
?sta equ 42 io status word
?rln equ 44 last record length
?rnd equ 46 last random real number (6 bytes)
?uptrc equ 52 upsi value at initialization (1 byte)
?sstop equ 53 string discriptor stack top
?rstop equ 55 real number stack top
?fpt equ 57 next free pointer in free string area
?pc equ 59 program counter
?cver equ 61 conversion error
?merr equ 62 math statement error
*
otag equ b'1000000000000000' opcode tag bit
ftag equ b'0100000000000000' function tag bit
stag equ b'0010000000000000' string tag bit
itag equ b'0001000000000000' integer tag bit
*
*
eq equ b'001' equal test mask
lt equ b'010' less than test mask
gt equ b'100' greater than test mask
*
*
nip equ 9 number of integer places
ndp equ 6 number of decimal places
lrn equ 6 byte length of real number
csz equ 12 call stack size (number of calls)
wll equ 8 work line length
*
(bmon05)
*
* fdtb description
*
frsz equ 0 record size (pointer to rcb after processing)
fptr equ 0 pointer to rcb (word)
fkey equ 2 address of key (word)
fsys equ 4 sys # (file status after processing)
fsta equ 4 file status (byte)
facs equ 5 access/buffer (0=seq, 1=rnd, 2=ind (sla'd) = bit 0=buffer)
fmod equ 5 access mode (after processing) - word
fcls equ 6 device class
ftyp equ 7 file type
*
* fmod values
*
* 0=seq/unb/ascii, 1=seq/buf/ascii, 2=rnd/unb, 3=rnd/buf, 4=seq/buf/bin, 5=ind
*
*
(oss00 ) tib
*
svc set x'5a'
*
*
* task information block description
*
tbrun equ 0 task running flag (1=true)
tbid equ tbrun+1 task identifier
tbpct equ tbid+1 task priority counter
tbpri equ tbpct+1 task priority value
tblub equ tbpri+1 addr of lub table for this task
tbplu equ tblub+2 1st programmer logical unit number
tblmx equ tbplu+1 max logical unit number for this task
tbcon equ tblmx+1 addr of console pub for this task
tblom equ tbcon+2 low memory address
tbhim equ tblom+2 high memory address
tbshi equ tbhim+2 last prog segment high address
tbss equ tbshi+2 's' reg save area
tbjcf equ tbss+2 job control flag
tbabt equ tbjcf+1 abort flag
tbccd equ tbabt+1 completion code
tbups equ tbccd+1 utility program switches
tbpmx equ tbups+1 max ncmber of job parameters
tbprm equ tbpmx+1 address of job parameters
tbuw0 equ tbprm+2 utility word 0 (first word of cpl program)
tbrdn equ tbuw0+2 run disc number
tbrlb equ tbrdn+1 run lib (dir) disc addr
tbrfn equ tbrlb+2 run file name (10-char)
tbcunt equ tbrfn+10 console unit number
tbsub equ tbcunt+1 storage for sub-totals in cpl math statements
tbdflt equ tbsub+8 default disk number
tbtlck equ tbdflt+1 time lock (-1=disabled)
tbjlck equ tbtlck+2 job time for lock (0=tib time lock)
tbmap equ tbjlck+2 tib memory map
tbfrm equ tbmap+33 default form
tbtsv equ tbfrm+2 time of last wait
tbcbl equ tbtsv+1 cobol call x reg save
*
(oss01 ) pub
svc set x'5a'
*
* physical unit block description
*
pbf0 equ 0 flag 0
pbdvc equ pbf0+1 device type
pbunt equ pbdvc+1 unit number
pbdcf equ pbunt+1 device control flag address
pbsrb equ pbdcf+2 device service service routine block address
pbnam equ pbsrb+2 symbolic device name (6-char)
pbtib equ pbnam+6 addr of tib this pub is assigned to
pbdva equ pbtib+2 device address
*
*     the following extension is for keyboard devices
pbenb equ pbdva+2 input enabled flag (1=true)
pblch equ pbenb+1 last char of message
pbatn equ pblch+1 attention flag
pbrcb equ pbatn+1 address of current rcb
pbc0 equ pbrcb+2 control byte
pbach equ pbc0+1 attn char
pblc equ pbach+1 line count (crt screen size)
pbmcb equ pblc+1 mux control byte
pbcunt equ pbmcb+1 pub console unit number
pbisr equ pbcunt+1 user interupt service routine
pbpd equ pbisr+2 pub pre-driver
pbccd equ pbpd+2 crt security code
pbcdvt equ pbccd+6 bin time of last security violation
pbcdvd equ pbcdvt+4 bin date of last violation
*
*    the following extension is for disk devices
pbntk equ pbdva+2 number of tracks on disk
pbdsc equ pbntk+2 disk select code
pbbst equ pbdsc+1 addr of bst for this disk
pbbstl equ pbbst+2 length of bst
pbdcd equ pbbstl+1 directory location code
*
* the following extension is for spoolers
*
pbfnm equ pbdva+2 spool filename (21 chars)
pbdsk equ pbfnm+21 disk num for spool file
*
* pbdvc value
*
dum equ 0 dummy
sel equ 1 selectric
vdo equ 2 video
prt equ 3 printer
dsc equ 4 disk
kpd equ 5 keypad
cas equ 6 cassette
tap equ 7 mag tape
ptr equ 8 paper tape reader
spl equ 9 spooler
com equ 10 communication
*
(oss02 ) fcb
svc set x'5a'
*
* file control block description
*
fbsiz equ 0 file size in sectors
fbbbp equ fbsiz+2 file beginning buffer pointer
fbfsi equ fbbbp+2 file size incriment
fbf0 equ fbfsi+1 file flag zero
fbatt equ fbf0+1 file attributes
fbflb equ fbatt+1 file library directory number
fbcda equ fbflb+2 current relative disk addr for sysio
fbcbp equ fbcda+2 current buffer pointer for sysio
fbfnm equ fbcbp+2 file name
fbcls equ fbfnm+10 file class
fbdat equ fbcls+1 file date
fbxx equ fbdat+2 unused
fbdal equ fbxx+1 file allocation list
fbflen equ fbdal fcb fixed length
*
(oss03 ) rcb
svc set x'5a'
*
* record control block description
*
rbsta equ 0 status of i-o event
rblun equ rbsta+1 logical unit number
rbf0 equ rblun+1 flag 0
rbfcn equ rbf0+1 function
rbbln equ rbfcn+1 max buffer length
rbbuf equ rbbln+2 buffer address
rbctl equ rbbuf+2 control word
*     logical io extension
rblsr equ rbctl+2 address of logical io routine
rbdvc equ rblsr+2 device class
rbdft equ rbdvc+1 disc file type
rbrln equ rbdft+1 max record length
rbrec equ rbrln+2 address of record area
rbcda equ rbrec+2 current disc address
rbcbp equ rbcda+2 current buffer pointer
rbnda equ rbcbp+2 next disc address
rbnbp equ rbnda+2 next buffer pointer
rbkey equ rbnbp+2 address of 32-bit record key
rbrsz equ rbkey+2 record size for random access calculation
*
rbnok equ rbrsz+2 number of index key records
rbdln equ rbnok+3 data record length
rbkln equ rbdln+2 key length
rbhk equ rbkln+1 hash key
rbsk1 equ rbhk+3 save key 1
rbsk2 equ rbsk1+3 save key 2
rbpdp equ rbsk2+3 prime data pointer save
rbhrz equ rbpdp+3 hold record zero sw
rbext equ rbhrz+1 extended index sw
rbssv equ rbext+1 s reg save
rbzsv equ rbssv+2 z reg save
rbirln equ rbzsv+2 length for index record i/o
rbipdp equ rbirln+2 index prime data pointer
rbichn equ rbipdp+3 index chain pointer
rbiid equ rbichn+3 index id
rbelen equ rbiid+35-rbnok extension length
*
*
* logical unit block
*
*
sysrdr equ x'80'
sysipt equ x'81'
syslog equ x'82'
syslst equ x'83'
*
*
*
*
(oss04 ) values
svc set x'5a'
*
*
* job control flag values (tib)
*
*
jlog equ b'00000001' log option (1=true)
jatn equ b'00000010' attn request flag
jjob equ b'00000100' job in process
jstp equ b'00001000' job step in process
jcan equ b'00010000' job cancelled
jtme equ b'00100000' time-hack option
jstr equ b'01000000' job started by another partition
jabt equ b'01000000' auto cancel on error
jdmp equ b'10000000' partition dump
*
*
*
* flag 0 value bit masks
*
inp equ b'00000001' input allowed (rcb-pub-fcb)
out equ b'00000010' output allowed (rcb-pub-fcb)
shr equ b'00000100' shared device/file (fcb-pub)
noe equ b'00001000' no echo flag (pub)
trns equ b'00001000' transparent mode (crt only) (rcb)
pas equ b'00010000' pass file to next job step (fcb)
fil equ b'00010000' file oriented device (pub)
opn equ b'00100000' file is opened (rcb)
asg equ b'00100000' device assigned (pub)
act equ b'01000000' active device (pub)
ext equ b'10000000' extended pub (pub)
frm equ b'01000000' spooler set form flag (rcb)
hld equ b'10000000' spooler hold/free flag (rcb)
*
*
*
* tbrun value bit masks
*
run equ b'00000001' partition running
lbuf equ b'00000010' load buffer for syslog
pwait equ b'00000100' partition waiting flag
multp equ b'00001000' multi programmable partition
wmflg equ b'00010000' memory option flag
mwflg equ b'00100000' waiting for memory flag
badge equ b'01000000' badge in security flag
mlstp equ b'10000000' memory lock partition stop flag
*
*
*
* file attribute value (fbatt)
*
dir equ 0 directory file
bin equ 1 binary file
lnk equ 2 linked sequential file
ctg equ 3 contiguous sectored file
exf equ 4 executable program file
lib equ 5 private library file
ind equ 6 hashed indexed file
seg equ 7 incomplete file segment
que equ 8 spooler que file
*
int equ b'00010000' initialize file
rdp equ b'01000000' read protected
wrp equ b'10000000' write protected
*
*
*
* i-o status byte values (rbsta)
*
seof equ 1 end of file
seom equ 2 end of medium
scna equ 3 command not acknowledged
serr equ 4 error i-o
swlr equ 5 wrong length record
sbsy equ b'10000000' busy (event not complete)
*
*
prmlen equ 10 parameter length
lowelm equ 16 low partition element
*
noatn equ b'10000000' no atten flag (pbatn)
*
(oss15 ) directory and allocation list displacements
*
* directory record zero
*
drvol equ 0 name of disk volume
drrgdt equ 10 date of last reorg
drrger equ 12 number of errors in last reorg
draloc equ 13 disk address of first sector of alloc list file
*
* directory displacements
*
drfnam equ 0 file name
drabp equ 10 buffer pointer/3 of allocation list for file
draad equ 11 relative disk address of allocation list for file
dratt equ 13 file attributes: 4-bits unused/4-bits file type
drdat equ 14 binary file date
drlen equ 16 length of directory entry
*
* attribute list record displacements
*
atsiz equ 0 file size
atbbp equ 2 file beginning buffer pointer
atfsi equ 4 file size incriment
atcls equ 5 file class
atdal equ 6 file disk address list
atflen equ atdal fcb fixed length
*
*
*
(oss20 ) comrg
*
* comrg (osn0) displacements
*
osn0 equ x'100' addr of commreg
curtb equ 3 current tib address
sdsc equ 5 system disc number
mxdsc equ 6 max disc number
tibpt equ 7 tib pointer table address
pubpt equ 9 pub pointer table address
muxpt equ 11 mux device pub pointer table address
lubtb equ 13 lub table address
svcjt equ 15 service call jump table
mxlub equ 17 max lub number (all tibs)
mxdx equ 20 max ojx number
dxtb equ 22 addr of ojx disc address table
jxfcb equ 24 addr of fcb for private library containing jxlib
txfcb equ 26 addr of fcb for private library containing txlib
daip equ 28 disc space allocation in process sw
sysbf equ 29 address of system buffer
dmacf equ 31 dma control flag
shtb equ 32 sector hold table address
bgdate equ 34 "grin" date for basic
dsabl equ 37 dissable task selection switch (0=enabled)
dvint equ 38 addr of device initializtion routine table
cdate equ 40 character date
ctime equ 48 character time
basmon equ 57 address of basic monitor (0=monitor not loaded)
sbfcf equ 59 system buffer control flag (-1=free, tibid=in use)
os5flg equ 60 osn5 usage flag (-1=free, tibid=in use)
tflag equ 61 transient usgae flag (-1=free, tibid=in use)
atnflg equ 62 attn flag
dmacfp equ atnflg+1 address of last pub to set dma
toflg equ dmacfp+2 time out flag
tmlck equ toflg+1 time lock default for all tibs
mutbl equ tmlck+2 memory usage table
isrtb equ mutbl+16 addr of table of isr's currently resident in the opsys
basmap equ isrtb+2 addr of basic map for basic monitor
cobol equ basmap+2 addr of cobol routines
cobmap equ cobol+2 addr of cobol map save
atnque equ cobmap+2 addr of queue of pubs needing attention
pdtbl equ atnque+2 addr of predriver table
clc equ pdtbl+2 clock cycle (line voltage cycle)
mstmap equ clc+1 system master memory map
piomap equ mstmap+32 physical i/o memory map
*
(oss25 ) disk table values
*
* disk table values
*
bstsa equ x'000f' bst address
*
(oss30 )
*
* service call jump table description
*
@pioc equ 0 physical i/o control
@trtn equ 1 transient return
@lodnm equ 2 load file name specified
@lodf equ 3 load fcb specified
@lodjx equ 4 load jx module specified
@ts equ 5 load transient module
@flwt equ 6 wait for flag to go positive
@wt equ 7 uncontitional wait
@rbwt equ 8 wait for rcb to go ready
@abrt equ 9 abort task
@exit equ 10 exit to ojx00
@dt equ 11 get binary date
@pgiob equ 12 protected get i/o block
@jxm equ 13 protected change to jx map
@dirnm equ 14 search directory for file name specified
@conio equ 15 console i/o
@sysio equ 16 device independant logical unit i/o (all units)
@gmemr equ 17 @gmem with a=addr b=size
@flwtr equ 18 @flwt with flag address in al
@rmemr equ 19 @rmem with address in a
@drdy equ 20 disk ready check
@gbr equ 21 get bin time into a and b regs
@gmem equ 22 get memory block from transient area
@rmem equ 23 release memory block back to transient area
@lioc equ 24 logical i/o control
@exp equ 25 file expand
@user equ 26 change to user mode
@gb equ 27 get binary time
@gc equ 28 get character time
@stime equ 29 set time lock
@ld equ 30 cpl 32-bit load
@st equ 31 cpl 32-bit store
@ad equ 32 cpl 32-bit add
@tsr equ 33 @ts with tx# in au
@su equ 34 cpl 32-bit subtract
@gdpub equ 35 locate pub for disk specified in al
@mu equ 36 cpl 32-bit multiply
@dv equ 37 cpl 32-bit divide
@cn equ 38 cpl 32-bit numeric compare
@cs equ 39 cpl string compare
@cg equ 40 cpl 32-bit computed goto
@mv equ 41 cpl string move
@cp equ 42 cpl cursor position
@mul16 equ 43 16-bit multiply
@div16 equ 44 16-bit divide
@cvd16 equ 45 16-bit cvt to dec from memory
@cvr16 equ 46 16-bit cvt to dec from 'a' reg
@cb equ 47 cpl cursor blanking
@cc equ 48 cpl cursor blanking with specified string
@wn equ 49 cpl formatted write with out c/r
@dc equ 50 cpl decode
@nc equ 51 cpl encode
@rf equ 52 cpl formatted read
@wf equ 53 cpl formatted write
@rt equ 54 cpl re-write
@rb equ 55 cpl binary read
@wb equ 56 cpl binary write
@op equ 57 cpl open
@ct equ 58 cpl control function
@ld48 equ 59 cpl 48-bit load
@st48 equ 60 cpl 48-bit store
@ad48 equ 61 cpl 48-bit add
@su48 equ 63 cpl 48-bit subtract
@mu48 equ 65 cpl 48-bit multiply
@dv48 equ 66 cpl 48-bit divide
@cn48 equ 67 cpl 48-bit numeric compare
@cg48 equ 68 cpl 48-bit computed goto
@ld64 equ 69 cpl 64-bit load
@st64 equ 70 cpl 64-bit store
@ad64 equ 71 cpl 64-bit add
@su64 equ 72 cpl 64-bit subtract
@mu64 equ 73 cpl 64-bit multiply
@dv64 equ 74 cpl 64-bit divide
@ttime equ 75 test time lock
@dio equ 76 disk i/o
@shld equ 77 sector hold
@sfre equ 78 sector free
@dirl equ 79 search library directory
@dire equ 80 locate directory entry specified
@dird equ 81 set date of file or subfile
@giob equ 82 unprotected giob
@fmd equ 83 hard disk format
@drnmb equ 84 directory search
@diosx equ 85 execute disk command string
@fsvc equ 86 fake svc call
@lodtx equ 87 load tx module
@bug equ 88 bug
@aseg equ 89 add next free memory segment to curtb (wait for completion)
@rseg equ 90 release memory segment specified in al
@lodnmt equ 91 load name into transient area
@gbkv equ 92 get os block value
@pbkv equ 93 set os block value
@asegr equ 94 add next free mem seg to curtb (ret if not available)
@gprm equ 95 get general parameter
@pprm equ 96 set general parameter
@ccc equ 97 security code check
@lodfr equ 98 load fcb from .run
@rsegx equ 99 release other part memory
@dirlf equ 100 create fcb for file in private lib
@dirsz equ 101 access size of file in private lib
@eom equ 102 check for eof/eom
@gvol equ 103 get volume name
@rlsr equ 104 return from lsr
@isrm equ 105 connect/disconnect isr from pub
@basic equ 106 enter basic monitor for current partition
@abrtr equ 107 abort with ab code in al
@exitr equ 108 exit with cc al
@lodcob equ 109 cobol overlay load
@cobol equ 110 cobol call
@rcob equ 111 cobol return
*

