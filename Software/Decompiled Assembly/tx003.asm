* Label naming:
* ENTRY = Main entry point
* ENTnn = Additional entry point
* B = Byte
* D = Displaced branch/jump target
* F = Function JSR target
* I = 32-bit integer
* J = Jump target
* L = Label (generic)
* N = Bignum
* P = Pointer
* S = String
* W = Word
*
*
* Function ENTRY
*
8000:ENTRY SVC   X'06'      ; =6 [Service call FLWT - wait for flag to go positive]
8002:      DB    X'3B'      ; =0x3b =59 [TODO: arg 1]
8003:      SVC   X'16'      ; =22 [Service call GMEM - get memory block from transient area]
8005:      DW    X'0192'    ; =0x0192 =402 [TODO: arg1] [TODO: arg2]
8007:W8007 DW    X'0000'    ; =0x0000 =0 =NUL,NUL
8009:      LDA   W8007      ; =-4 [Load A relative]
800b:      INR   A,2        ; [Increment A by 2]
800d:      STA/  W8125      ; =0x8125 =33061(-32475) [Store A direct]
8010:      LDAB+ S,14       ; [Load AL indexed, displaced, direct]
8013:      STAB/ B8122      ; =0x8122 =33058(-32478) [Store AL direct]
8016:      LDA+  S,8        ; [Load A indexed, displaced, direct]
8019:      STA/  W8120      ; =0x8120 =33056(-32480) [Store A direct]
801c:      LDB+  S,10       ; [Load B indexed, displaced, direct]
801f:      LDB+  B          ; [Load B from address in B]
8020:      LDAB+ B,4        ; [Load AL indexed, displaced, direct]
8023:      DCAB             ; [Decrement AL]
8024:      STAB/ B80C9+1    ; =0x80ca =32970(-32566) [Store AL direct]
8027:      STAB/ B80CB+1    ; =0x80cc =32972(-32564) [Store AL direct]
802a:      CLA              ; [Clear A]
802b:D802B STA/  B8122+1    ; =0x8123 =33059(-32477) [Store A direct]
802e:      JSR/  F810B      ; =0x810b =33035(-32501) [Jump to subroutine direct]
8031:      DB    X'01'      ; =0x01 =1
8032:      XFR/  W8125,Y    ; =0x8125 =33061(-32475) [Transfer direct to Y]
8036:      JMP   D804B      ; =+19 [Jump relative]
8038:D8038 INR   Y,6        ; [Increment Y by 6]
803a:      LDA/  W8125      ; =0x8125 =33061(-32475) [Load A direct]
803d:      LDB=  X'0192'    ; =0x0192 =402 [Load B with immediate]
8040:      AAB              ; [A + B -> B]
8041:      SUB   Y,B        ; [Y - B -> B]
8043:      BNL   D804B      ; =+6 [Branch on no link]
8045:      LDA/  B8122+1    ; =0x8123 =33059(-32477) [Load A direct]
8048:      INA              ; [Increment A]
8049:      JMP   D802B      ; =-32 [Jump relative]
804b:D804B LDAB+ Y          ; [Load AL from address in Y]
804c:      BP    D806A      ; =+28 [Branch on plus]
804e:      INAB             ; [Increment AL]
804f:      BZ    D80B1      ; =+96 [Branch if zero]
8051:      CLA              ; [Clear A]
8052:      DCA              ; [Decrement A]
8053:      STA   W808A+1    ; =+54 [Store A relative]
8055:      LDA+  *S,10      ; [Load A indexed, displaced, indirect]
8058:      LDA+  A,2        ; [Load A indexed, displaced, direct]
805b:      INA              ; [Increment A]
805c:      LDB+  Y,4        ; [Load B indexed, displaced, direct]
805f:      SAB              ; [A - B -> B]
8060:      STB/  W80E4+1    ; =0x80e5 =32997(-32539) [Store B direct]
8063:      LDA+  S          ; [Load A from address in S]
8064:      SUB   B,A        ; [B - A -> A]
8066:      BNL   D80B1      ; =+73 [Branch on no link]
8068:      JMP   D8075      ; =+11 [Jump relative]
806a:D806A LDA+  Y,1        ; [Load A indexed, displaced, direct]
806d:      STA   W80E4+1    ; =+118 [Store A relative]
806f:      LDB+  S          ; [Load B from address in S]
8070:      SAB              ; [A - B -> B]
8071:      STB   W808A+1    ; =+24 [Store B relative]
8073:      BNL   D8038      ; =-61 [Branch on no link]
8075:D8075 LDA+  Y,4        ; [Load A indexed, displaced, direct]
8078:      LDB+  S          ; [Load B from address in S]
8079:      AAB              ; [A + B -> B]
807a:      STB-  S-         ; [Store B indexed, pre-decremented, direct]
807c:      JSR   F80BC      ; =+62 [Jump to subroutine relative]
807e:      LDA+  S          ; [Load A from address in S]
807f:      STB+  S          ; [Store B to address in S]
8080:      DCA              ; [Decrement A]
8081:      JSR   F80BC      ; =+57 [Jump to subroutine relative]
8083:      LDA+  S          ; [Load A from address in S]
8084:      STB+  S          ; [Store B to address in S]
8085:      SAB              ; [A - B -> B]
8086:      BNZ   D80DD      ; =+85 [Branch if not zero]
8088:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
808a:W808A LDA=  X'0000'    ; =0x0000 =0 =NUL,NUL [Load A with immediate]
808d:      STA+  Y,1        ; [Store A indexed, displaced, direct]
8090:      LDA+  Y,4        ; [Load A indexed, displaced, direct]
8093:      LDB+  S          ; [Load B from address in S]
8094:      AAB              ; [A + B -> B]
8095:      STB+  Y,4        ; [Store B indexed, displaced, direct]
8098:      STA-  S-         ; [Store A indexed, pre-decremented, direct]
809a:D809A JSR   F80CF      ; =+51 [Jump to subroutine relative]
809c:      CLA              ; [Clear A]
809d:      DCA              ; [Decrement A]
809e:      STAB+ X,59       ; [Store AL indexed, displaced, direct]
80a1:      LDA/  W8125      ; =0x8125 =33061(-32475) [Load A direct]
80a4:      DCR   A,2        ; [Decrement A by 2]
80a6:      XAY              ; [Transfer A to Y]
80a7:      LDA/  B8122+1    ; =0x8123 =33059(-32477) [Load A direct]
80aa:      STA+  Y          ; [Store A to address in Y]
80ab:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
80ad:      SVC   X'01'      ; =1 [Service call TRTN - transient return]
80af:      DW    X'0001'    ; =0x0001 =1 [return code]
*
80b1:D80B1 CLAB             ; [Clear AL]
80b2:      DCAB             ; [Decrement AL]
80b3:      STAB+ X,59       ; [Store AL indexed, displaced, direct]
80b6:      LDAB= X'08'      ; =8 [Load AL with immediate]
80b8:      SVC   X'01'      ; =1 [Service call TRTN - transient return]
80ba:      DW    X'0002'    ; =0x0002 =2 [return code]
*
*
* Function F80BC
*
80bc:F80BC LDBB  B80CB+1    ; =+14 [Load BL relative]
80be:      BM    D80CD      ; =+13 [Branch on minus]
80c0:      RL               ; [Reset link]
80c1:      RRR   A          ; [Right rotate A by 1]
80c3:      DCRB  BL         ; [Decrement BL by 1]
80c5:      BM    B80CB      ; =+4 [Branch on minus]
80c7:      STBB  B80C9+1    ; =+1 [Store BL relative]
80c9:B80C9 SRR   A,2        ; [Right shift A by 2]
80cb:B80CB SLR   A,2        ; [Left shift A by 2]
80cd:D80CD XAB              ; [Transfer A to B]
80ce:      RSR              ; [Return from subroutine]
*
* Function F80CF
*
80cf:F80CF LDB+  S          ; [Load B from address in S]
80d0:      LDB+  B,3        ; [Load B indexed, displaced, direct]
80d3:      LDB+  B,8        ; [Load B indexed, displaced, direct]
80d6:      ORC   (1)=X'80',-B,19 ; [OR bytes, literal=128(-128), displaced indexed]
80dc:      RSR              ; [Return from subroutine]
*
80dd:D80DD LDA+  S          ; [Load A from address in S]
80de:      LDB+  Y,4        ; [Load B indexed, displaced, direct]
80e1:      SAB              ; [A - B -> B]
80e2:      STB-  S-         ; [Store B indexed, pre-decremented, direct]
80e4:W80E4 LDA=  X'0000'    ; =0x0000 =0 =NUL,NUL [Load A with immediate]
80e7:      SAB              ; [A - B -> B]
80e8:      LDA+  S,4        ; [Load A indexed, displaced, direct]
80eb:      SUB   B,A        ; [B - A -> A]
80ed:      BL    D80F6      ; =+7 [Branch on link]
80ef:      INR   S,4        ; [Increment S by 4]
80f1:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
80f3:      JMP/  D8038      ; =0x8038 =32824(-32712) [Jump direct]
80f6:D80F6 BNZ   D8102      ; =+10 [Branch if not zero]
80f8:      LDB+  S+         ; [Load B indexed, direct, post-incremented]
80fa:      LDAB+ Y          ; [Load AL from address in Y]
80fb:      BM    D8100      ; =+3 [Branch on minus]
80fd:      STB+  Y,1        ; [Store B indexed, displaced, direct]
8100:D8100 JMP   D809A      ; =-104 [Jump relative]
8102:D8102 LDB+  S          ; [Load B from address in S]
8103:      STA+  S          ; [Store A to address in S]
8104:      STB+  Y,1        ; [Store B indexed, displaced, direct]
8107:      JSR   F80CF      ; =-58 [Jump to subroutine relative]
8109:      JMP   D8129      ; =+30 [Jump relative]
*
* Function F810B
*
810b:F810B LDAB+ X+         ; [Load AL indexed, direct, post-incremented]
810d:      STAB  B8127      ; =+24 [Store AL relative]
810f:      LDB   B8122+1    ; =+18 [Load B relative]
8111:      LDA*  W8120      ; =+13 [Load A relative indirect]
8113:      LDA+  A,2        ; [Load A indexed, displaced, direct]
8116:      SAB              ; [A - B -> B]
8117:      BL    D811C      ; =+3 [Branch on link]
8119:      SVC   X'09'      ; =9 [Service call ABRT - abort task]
811b:      DB    X'29'      ; =0x29 =41 [abort code]
*
811c:D811C SVC   X'4C'      ; =76 [Service call DIO - disk I/O]
811e:      DW    X'0190'    ; =0x0190 =400
8120:W8120 DW    X'0000'    ; =0x0000 =0 =NUL,NUL [TODO: arg1]
8122:B8122 DW    X'0000'    ; =0x0000 =0 =NUL,NUL [TODO: arg2]
8124:      DB    X'00'      ; =0x00 =0 =NUL [TODO: arg3]
8125:W8125 DW    X'0000'    ; =0x0000 =0 =NUL,NUL [TODO: arg4]
8127:B8127 DB    X'00'      ; =0x00 =0 =NUL [TODO: arg5]
8128:      RSR              ; [Return from subroutine]
*
8129:D8129 LDA   B8122+1    ; =-8 [Load A relative]
812b:      STA   W8156+1    ; =+42 [Store A relative]
812d:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
812f:      STA/  S81C1      ; =0x81c1 =33217(-32319) [Store A direct]
8132:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
8134:      STA   W81B3+1    ; =+126 [Store A relative]
8136:      LDB+  S          ; [Load B from address in S]
8137:      AAB              ; [A + B -> B]
8138:      STB/  W81C4      ; =0x81c4 =33220(-32316) [Store B direct]
813b:      XFR   Y,A        ; [Transfer Y to A]
813d:      STA   W8152+1    ; =+20 [Store A relative]
813f:      CLAB             ; [Clear AL]
8140:      DCAB             ; [Decrement AL]
8141:      STAB/ B81D3+1    ; =0x81d4 =33236(-32300) [Store AL direct]
8144:D8144 LDAB+ Y          ; [Load AL from address in Y]
8145:      BM    D8150      ; =+9 [Branch on minus]
8147:      LDA+  Y,1        ; [Load A indexed, displaced, direct]
814a:      BZ    W8152      ; =+6 [Branch if zero]
814c:      JSR   F81C6      ; =+120 [Jump to subroutine relative]
814e:      JMP   D8144      ; =-12 [Jump relative]
8150:D8150 JSR   F81C6      ; =+116 [Jump to subroutine relative]
8152:W8152 LDA=  X'0000'    ; =0x0000 =0 =NUL,NUL [Load A with immediate]
8155:      XAY              ; [Transfer A to Y]
8156:W8156 LDA=  X'0000'    ; =0x0000 =0 =NUL,NUL [Load A with immediate]
8159:      LDB   B8122+1    ; =-56 [Load B relative]
815b:      SAB              ; [A - B -> B]
815c:      BZ    D8163      ; =+5 [Branch if zero]
815e:      STA   B8122+1    ; =-61 [Store A relative]
8160:      JSR   F810B      ; =-87 [Jump to subroutine relative]
8162:      DB    X'01'      ; =0x01 =1
*
8163:D8163 LDAB= X'01'      ; =1 [Load AL with immediate]
8165:      STAB  B81D3+1    ; =+109 [Store AL relative]
8167:      CLRB  BL         ; [Clear BL]
8169:      LDAB+ Y          ; [Load AL from address in Y]
816a:      BZ    D8173      ; =+7 [Branch if zero]
816c:      CLA              ; [Clear A]
816d:      STAB+ Y          ; [Store AL to address in Y]
816e:      DCA              ; [Decrement A]
816f:      STA   S81C1      ; =+80 [Store A relative]
8171:      LDBB= X'FE'      ; =254(-2) ='~' [Load BL with immediate]
8173:D8173 STBB  B81C0      ; =+75 [Store BL relative]
8175:      STX-  S-         ; [Store X indexed, pre-decremented, direct]
8177:      STK   Z,2        ; [Push Z to the stack]
8179:      LDX=  S81BA      ; =0x81ba =33210(-32326) [Load X with immediate]
817c:      LDA=  B81C0      ; =0x81c0 =33216(-32320) [Load A with immediate]
817f:      XAZ              ; [Transfer A to Z]
8180:      JSR   F81C6      ; =+68 [Jump to subroutine relative]
8182:D8182 MVF   (6)-Y,-X   ; [Move fixed-length, indexed, indexed]
8186:      MVF   (6)-Z,-Y   ; [Move fixed-length, indexed, indexed]
818a:      LDAB+ Y          ; [Load AL from address in Y]
818b:      BM    D819B      ; =+14 [Branch on minus]
818d:      LDA+  X,1        ; [Load A indexed, displaced, direct]
8190:      BZ    D819B      ; =+9 [Branch if zero]
8192:      XFR   X,A        ; [Transfer X to A]
8194:      XFR   Z,X        ; [Transfer Z to X]
8196:      XAZ              ; [Transfer A to Z]
8197:      JSR   F81C6      ; =+45 [Jump to subroutine relative]
8199:      JMP   D8182      ; =-25 [Jump relative]
819b:D819B JSR/  F810B      ; =0x810b =33035(-32501) [Jump to subroutine direct]
819e:      DB    X'02'      ; =0x02 =2
819f:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
81a1:      XAZ              ; [Transfer A to Z]
81a2:      LDX+  S+         ; [Load X indexed, direct, post-incremented]
81a4:      CLA              ; [Clear A]
81a5:      DCA              ; [Decrement A]
81a6:      STAB+ X,59       ; [Store AL indexed, displaced, direct]
81a9:      LDA/  W8125      ; =0x8125 =33061(-32475) [Load A direct]
81ac:      DCR   A,2        ; [Decrement A by 2]
81ae:      XAY              ; [Transfer A to Y]
81af:      LDA/  B8122+1    ; =0x8123 =33059(-32477) [Load A direct]
81b2:      STA+  Y          ; [Store A to address in Y]
81b3:W81B3 LDA=  X'0000'    ; =0x0000 =0 =NUL,NUL [Load A with immediate]
81b6:      SVC   X'01'      ; =1 [Service call TRTN - transient return]
81b8:      DW    X'0001'    ; =0x0001 =1 [return code]
81ba:S81BA DB    0,6        ; =0x00,0x0006
81c0:B81C0 DB    X'00'      ; =0x00 =0 =NUL
81c1:S81C1 DB    0,3        ; =0x00,0x0003
81c4:W81C4 DW    X'0000'    ; =0x0000 =0 =NUL,NUL
*
*
* Function F81C6
*
81c6:F81C6 INR   Y,6        ; [Increment Y by 6]
81c8:      LDA/  W8125      ; =0x8125 =33061(-32475) [Load A direct]
81cb:      LDB=  X'018C'    ; =0x018c =396 [Load B with immediate]
81ce:      AAB              ; [A + B -> B]
81cf:      SUB   Y,B        ; [Y - B -> B]
81d1:      BNL   D81E7      ; =+20 [Branch on no link]
81d3:B81D3 LDAB= X'00'      ; =0 =NUL [Load AL with immediate]
81d5:      BZ    D81DB      ; =+4 [Branch if zero]
81d7:      JSR/  F810B      ; =0x810b =33035(-32501) [Jump to subroutine direct]
81da:      DB    X'02'      ; =0x02 =2
*
81db:D81DB INC/  B8122+1    ; =0x8123 =33059(-32477) [Increment word at address by 1]
81df:      LDA/  W8125      ; =0x8125 =33061(-32475) [Load A direct]
81e2:      XAY              ; [Transfer A to Y]
81e3:      JSR/  F810B      ; =0x810b =33035(-32501) [Jump to subroutine direct]
81e6:      DB    X'01'      ; =0x01 =1
*
81e7:D81E7 RSR              ; [Return from subroutine]
*
81e8:ENDPT
