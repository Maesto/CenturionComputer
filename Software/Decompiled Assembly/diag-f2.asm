* Label naming:
* ENTRY = Main entry point
* ENTnn = Additional entry point
* B = Byte
* D = Displaced branch/jump target
* F = Function JSR target
* I = 32-bit integer
* J = Jump target
* L = Label (generic)
* N = Bignum
* P = Pointer
* S = String
* W = Word
*
8800:      DB    X'00'      ; =0x00 =0 =NUL
8801:      DB    X'49'      ; =0x49 =73
8802:      DC    'CPU INSTRUCTION TEST'
8816:      DB    X'8D'      ; =0x8d =141(-115) =CR
8817:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8819:      DB    X'05'      ; =0x05 =5
881a:      DC    ';CPU-6 MAPPING RAM TEST'
8831:      DB    X'8D'      ; =0x8d =141(-115) =CR
8832:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8834:      DW    X'075F'    ; =0x075f =1887
8836:      DC    'ROM SELF TEST'
8843:      DB    X'8D'      ; =0x8d =141(-115) =CR
8844:      DW    X'8A8A'    ; =0x8a8a =35466(-30070) =LF,LF
8846:      DB    0,3        ; =0x00,0x0003
*
8849:      LDA=  X'07CC'    ; =0x07cc =1996 [Load A with immediate]
884c:      ADD   Z,A        ; [Z + A -> A]
884e:      JSR+  A          ; [Jump to subroutine indexed, direct]
8850:      DW    X'9B9C'    ; =0x9b9c =39836(-25700)
8852:      DB    X'8C'      ; =0x8c =140(-116) =FF
8853:      DC    'CPU INSTRUCTION TEST, CONTROL-C TO EXIT'
887a:      DB    X'8D'      ; =0x8d =141(-115) =CR
887b:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
887d:      STX-  S-         ; [Store X indexed, pre-decremented, direct]
887f:      XFR   Z,A        ; [Transfer Z to A]
8881:      STA-  S-         ; [Store A indexed, pre-decremented, direct]
8883:      LDX=  X'0020'    ; =0x0020 =32 [Load X with immediate]
8886:      LDA=  X'05A1'    ; =0x05a1 =1441 [Load A with immediate]
8889:      ADD   Z,A        ; [Z + A -> A]
888b:      XAY              ; [Transfer A to Y]
888c:      LDA=  X'0010'    ; =0x0010 =16 [Load A with immediate]
888f:D888F LDBB+ Y+         ; [Load BL indexed, direct, post-incremented]
8891:      STBB+ A+         ; [Store BL indexed, direct, post-incremented]
8893:      DCX              ; [Decrement X]
8894:      BNZ   D888F      ; =-7 [Branch if not zero]
8896:      RF               ; [Reset fault]
8897:      RL               ; [Reset link]
8898:      LDBB= X'01'      ; =1 [Load BL with immediate]
889a:      BNL   D889D      ; =+1 [Branch on no link]
889c:      HLT              ; [Halt]
889d:D889D BNF   D88A0      ; =+1 [Branch on no fault]
889f:      HLT              ; [Halt]
88a0:D88A0 BP    D88A3      ; =+1 [Branch on plus]
88a2:      HLT              ; [Halt]
88a3:D88A3 BNZ   D88A6      ; =+1 [Branch if not zero]
88a5:      HLT              ; [Halt]
88a6:D88A6 BGZ   D88A9      ; =+1 [Branch if greater than zero]
88a8:      HLT              ; [Halt]
88a9:D88A9 BL    D88AD      ; =+2 [Branch on link]
88ab:      BNL   D88AE      ; =+1 [Branch on no link]
88ad:D88AD HLT              ; [Halt]
88ae:D88AE BF    D88B2      ; =+2 [Branch on fault]
88b0:      BNF   D88B3      ; =+1 [Branch on no fault]
88b2:D88B2 HLT              ; [Halt]
88b3:D88B3 BZ    D88B7      ; =+2 [Branch if zero]
88b5:      BNZ   D88B8      ; =+1 [Branch if not zero]
88b7:D88B7 HLT              ; [Halt]
88b8:D88B8 BM    D88BC      ; =+2 [Branch on minus]
88ba:      BP    D88BD      ; =+1 [Branch on plus]
88bc:D88BC HLT              ; [Halt]
88bd:D88BD BLE   D88C1      ; =+2 [Branch if less than or equal to zero]
88bf:      BGZ   D88CB      ; =+10 [Branch if greater than zero]
88c1:D88C1 HLT              ; [Halt]
88c2:D88C2 BGZ   D88C8      ; =+4 [Branch if greater than zero]
88c4:      HLT              ; [Halt]
88c5:D88C5 BGZ   D88CE      ; =+7 [Branch if greater than zero]
88c7:      HLT              ; [Halt]
88c8:D88C8 BGZ   D88C5      ; =-5 [Branch if greater than zero]
88ca:      HLT              ; [Halt]
88cb:D88CB BGZ   D88C2      ; =-11 [Branch if greater than zero]
88cd:      HLT              ; [Halt]
88ce:D88CE CL               ; [Complement link]
88cf:      BL    D88D2      ; =+1 [Branch on link]
88d1:      HLT              ; [Halt]
88d2:D88D2 RL               ; [Reset link]
88d3:      BNL   D88D6      ; =+1 [Branch on no link]
88d5:      HLT              ; [Halt]
88d6:D88D6 SL               ; [Set link]
88d7:      BL    D88DA      ; =+1 [Branch on link]
88d9:      HLT              ; [Halt]
88da:D88DA CL               ; [Complement link]
88db:      BNL   D88DE      ; =+1 [Branch on no link]
88dd:      HLT              ; [Halt]
88de:D88DE SF               ; [Set fault]
88df:      BF    D88E2      ; =+1 [Branch on fault]
88e1:      HLT              ; [Halt]
88e2:D88E2 RF               ; [Reset fault]
88e3:      BNF   D88E6      ; =+1 [Branch on no fault]
88e5:      HLT              ; [Halt]
88e6:D88E6 NOP              ; [No operation]
88e7:      BNL   D88EA      ; =+1 [Branch on no link]
88e9:      HLT              ; [Halt]
88ea:D88EA BNF   D88ED      ; =+1 [Branch on no fault]
88ec:      HLT              ; [Halt]
88ed:D88ED BGZ   D88F0      ; =+1 [Branch if greater than zero]
88ef:      HLT              ; [Halt]
88f0:D88F0 SF               ; [Set fault]
88f1:      SL               ; [Set link]
88f2:      NOP              ; [No operation]
88f3:      BL    D88F6      ; =+1 [Branch on link]
88f5:      HLT              ; [Halt]
88f6:D88F6 BF    D88F9      ; =+1 [Branch on fault]
88f8:      HLT              ; [Halt]
88f9:D88F9 CLAB             ; [Clear AL]
88fa:      BNL   D88FD      ; =+1 [Branch on no link]
88fc:      HLT              ; [Halt]
88fd:D88FD BNF   D8900      ; =+1 [Branch on no fault]
88ff:      HLT              ; [Halt]
8900:D8900 BZ    D8903      ; =+1 [Branch if zero]
8902:      HLT              ; [Halt]
8903:D8903 BP    D8906      ; =+1 [Branch on plus]
8905:      HLT              ; [Halt]
8906:D8906 BLE   D8909      ; =+1 [Branch if less than or equal to zero]
8908:      HLT              ; [Halt]
8909:D8909 IVAB             ; [Invert AL]
890a:      BNF   D890D      ; =+1 [Branch on no fault]
890c:      HLT              ; [Halt]
890d:D890D BNL   D8910      ; =+1 [Branch on no link]
890f:      HLT              ; [Halt]
8910:D8910 BM    D8913      ; =+1 [Branch on minus]
8912:      HLT              ; [Halt]
8913:D8913 BLE   D8916      ; =+1 [Branch if less than or equal to zero]
8915:      HLT              ; [Halt]
8916:D8916 SL               ; [Set link]
8917:      SF               ; [Set fault]
8918:      CLRB  YL         ; [Clear YL]
891a:      BNL   D891D      ; =+1 [Branch on no link]
891c:      HLT              ; [Halt]
891d:D891D BNF   D8920      ; =+1 [Branch on no fault]
891f:      HLT              ; [Halt]
8920:D8920 BZ    D8923      ; =+1 [Branch if zero]
8922:      HLT              ; [Halt]
8923:D8923 INRB  YL         ; [Increment YL by 1]
8925:      BNL   D8928      ; =+1 [Branch on no link]
8927:      HLT              ; [Halt]
8928:D8928 BNF   D892B      ; =+1 [Branch on no fault]
892a:      HLT              ; [Halt]
892b:D892B BGZ   D892E      ; =+1 [Branch if greater than zero]
892d:      HLT              ; [Halt]
892e:D892E DCRB  YL         ; [Decrement YL by 1]
8930:      BNF   D8933      ; =+1 [Branch on no fault]
8932:      HLT              ; [Halt]
8933:D8933 BNL   D8936      ; =+1 [Branch on no link]
8935:      HLT              ; [Halt]
8936:D8936 BZ    D8939      ; =+1 [Branch if zero]
8938:      HLT              ; [Halt]
8939:D8939 DCRB  YL         ; [Decrement YL by 1]
893b:      BNF   D893E      ; =+1 [Branch on no fault]
893d:      HLT              ; [Halt]
893e:D893E BNL   D8941      ; =+1 [Branch on no link]
8940:      HLT              ; [Halt]
8941:D8941 BM    D8944      ; =+1 [Branch on minus]
8943:      HLT              ; [Halt]
8944:D8944 INRB  YL         ; [Increment YL by 1]
8946:      BNF   D8949      ; =+1 [Branch on no fault]
8948:      HLT              ; [Halt]
8949:D8949 BNL   D894C      ; =+1 [Branch on no link]
894b:      HLT              ; [Halt]
894c:D894C BZ    D894F      ; =+1 [Branch if zero]
894e:      HLT              ; [Halt]
894f:D894F SL               ; [Set link]
8950:      SF               ; [Set fault]
8951:      CLRB  YU         ; [Clear YU]
8953:      BNL   D8956      ; =+1 [Branch on no link]
8955:      HLT              ; [Halt]
8956:D8956 BNF   D8959      ; =+1 [Branch on no fault]
8958:      HLT              ; [Halt]
8959:D8959 BZ    D895C      ; =+1 [Branch if zero]
895b:      HLT              ; [Halt]
895c:D895C INRB  YU         ; [Increment YU by 1]
895e:      BNL   D8961      ; =+1 [Branch on no link]
8960:      HLT              ; [Halt]
8961:D8961 BNF   D8964      ; =+1 [Branch on no fault]
8963:      HLT              ; [Halt]
8964:D8964 BGZ   D8967      ; =+1 [Branch if greater than zero]
8966:      HLT              ; [Halt]
8967:D8967 DCRB  YU         ; [Decrement YU by 1]
8969:      BNF   D896C      ; =+1 [Branch on no fault]
896b:      HLT              ; [Halt]
896c:D896C BNL   D896F      ; =+1 [Branch on no link]
896e:      HLT              ; [Halt]
896f:D896F BZ    D8972      ; =+1 [Branch if zero]
8971:      HLT              ; [Halt]
8972:D8972 DCRB  YU         ; [Decrement YU by 1]
8974:      BNF   D8977      ; =+1 [Branch on no fault]
8976:      HLT              ; [Halt]
8977:D8977 BNL   D897A      ; =+1 [Branch on no link]
8979:      HLT              ; [Halt]
897a:D897A BM    D897D      ; =+1 [Branch on minus]
897c:      HLT              ; [Halt]
897d:D897D INRB  YU         ; [Increment YU by 1]
897f:      BNF   D8982      ; =+1 [Branch on no fault]
8981:      HLT              ; [Halt]
8982:D8982 BNL   D8985      ; =+1 [Branch on no link]
8984:      HLT              ; [Halt]
8985:D8985 BZ    D8988      ; =+1 [Branch if zero]
8987:      HLT              ; [Halt]
8988:D8988 SL               ; [Set link]
8989:      SF               ; [Set fault]
898a:      CLR   B          ; [Clear B]
898c:      BNL   D898F      ; =+1 [Branch on no link]
898e:      HLT              ; [Halt]
898f:D898F BNF   D8992      ; =+1 [Branch on no fault]
8991:      HLT              ; [Halt]
8992:D8992 BZ    D8995      ; =+1 [Branch if zero]
8994:      HLT              ; [Halt]
8995:D8995 INR   B          ; [Increment B by 1]
8997:      BNL   D899A      ; =+1 [Branch on no link]
8999:      HLT              ; [Halt]
899a:D899A BNF   D899D      ; =+1 [Branch on no fault]
899c:      HLT              ; [Halt]
899d:D899D BGZ   D89A0      ; =+1 [Branch if greater than zero]
899f:      HLT              ; [Halt]
89a0:D89A0 DCRB  BL         ; [Decrement BL by 1]
89a2:      BNF   D89A5      ; =+1 [Branch on no fault]
89a4:      HLT              ; [Halt]
89a5:D89A5 BNL   D89A8      ; =+1 [Branch on no link]
89a7:      HLT              ; [Halt]
89a8:D89A8 BZ    D89AB      ; =+1 [Branch if zero]
89aa:      HLT              ; [Halt]
89ab:D89AB DCR   B          ; [Decrement B by 1]
89ad:      BNF   D89B0      ; =+1 [Branch on no fault]
89af:      HLT              ; [Halt]
89b0:D89B0 BNL   D89B3      ; =+1 [Branch on no link]
89b2:      HLT              ; [Halt]
89b3:D89B3 BM    D89B6      ; =+1 [Branch on minus]
89b5:      HLT              ; [Halt]
89b6:D89B6 INR   B          ; [Increment B by 1]
89b8:      BNF   D89BB      ; =+1 [Branch on no fault]
89ba:      HLT              ; [Halt]
89bb:D89BB BNL   D89BE      ; =+1 [Branch on no link]
89bd:      HLT              ; [Halt]
89be:D89BE BZ    D89C1      ; =+1 [Branch if zero]
89c0:      HLT              ; [Halt]
89c1:D89C1 CLRB  SL         ; [Clear SL]
89c3:      IVRB  SL         ; [Invert SL]
89c5:      BNL   D89C8      ; =+1 [Branch on no link]
89c7:      HLT              ; [Halt]
89c8:D89C8 BNF   D89CB      ; =+1 [Branch on no fault]
89ca:      HLT              ; [Halt]
89cb:D89CB BM    D89CE      ; =+1 [Branch on minus]
89cd:      HLT              ; [Halt]
89ce:D89CE RRRB  SL         ; [Right rotate SL by 1]
89d0:      BL    D89D3      ; =+1 [Branch on link]
89d2:      HLT              ; [Halt]
89d3:D89D3 BP    D89D6      ; =+1 [Branch on plus]
89d5:      HLT              ; [Halt]
89d6:D89D6 BNF   D89D9      ; =+1 [Branch on no fault]
89d8:      HLT              ; [Halt]
89d9:D89D9 SLRB  SL         ; [Left shift SL by 1]
89db:      BF    D89DE      ; =+1 [Branch on fault]
89dd:      HLT              ; [Halt]
89de:D89DE BNL   D89E1      ; =+1 [Branch on no link]
89e0:      HLT              ; [Halt]
89e1:D89E1 BM    D89E4      ; =+1 [Branch on minus]
89e3:      HLT              ; [Halt]
89e4:D89E4 INRB  SL         ; [Increment SL by 1]
89e6:      BNF   D89E9      ; =+1 [Branch on no fault]
89e8:      HLT              ; [Halt]
89e9:D89E9 IVRB  SL         ; [Invert SL]
89eb:      BNF   D89EE      ; =+1 [Branch on no fault]
89ed:      HLT              ; [Halt]
89ee:D89EE BNL   D89F1      ; =+1 [Branch on no link]
89f0:      HLT              ; [Halt]
89f1:D89F1 BZ    D89F4      ; =+1 [Branch if zero]
89f3:      HLT              ; [Halt]
89f4:D89F4 IVRB  SL         ; [Invert SL]
89f6:      SRRB  SL         ; [Arithmetic right shift SL by 1]
89f8:      BL    D89FB      ; =+1 [Branch on link]
89fa:      HLT              ; [Halt]
89fb:D89FB BNF   D89FE      ; =+1 [Branch on no fault]
89fd:      HLT              ; [Halt]
89fe:D89FE BM    D8A01      ; =+1 [Branch on minus]
8a00:      HLT              ; [Halt]
8a01:D8A01 RLRB  SL         ; [Left rotate SL by 1]
8a03:      BNF   D8A06      ; =+1 [Branch on no fault]
8a05:      HLT              ; [Halt]
8a06:D8A06 BL    D8A09      ; =+1 [Branch on link]
8a08:      HLT              ; [Halt]
8a09:D8A09 BM    D8A0C      ; =+1 [Branch on minus]
8a0b:      HLT              ; [Halt]
8a0c:D8A0C IVRB  SL         ; [Invert SL]
8a0e:      BZ    D8A11      ; =+1 [Branch if zero]
8a10:      HLT              ; [Halt]
8a11:D8A11 BNF   D8A14      ; =+1 [Branch on no fault]
8a13:      HLT              ; [Halt]
8a14:D8A14 CLR   Y          ; [Clear Y]
8a16:      IVR   Y          ; [Invert Y]
8a18:      BNF   D8A1B      ; =+1 [Branch on no fault]
8a1a:      HLT              ; [Halt]
8a1b:D8A1B BNL   D8A1E      ; =+1 [Branch on no link]
8a1d:      HLT              ; [Halt]
8a1e:D8A1E BM    D8A21      ; =+1 [Branch on minus]
8a20:      HLT              ; [Halt]
8a21:D8A21 RRR   Y          ; [Right rotate Y by 1]
8a23:      BL    D8A26      ; =+1 [Branch on link]
8a25:      HLT              ; [Halt]
8a26:D8A26 BP    D8A29      ; =+1 [Branch on plus]
8a28:      HLT              ; [Halt]
8a29:D8A29 BNF   D8A2C      ; =+1 [Branch on no fault]
8a2b:      HLT              ; [Halt]
8a2c:D8A2C SLR   Y          ; [Left shift Y by 1]
8a2e:      BF    D8A31      ; =+1 [Branch on fault]
8a30:      HLT              ; [Halt]
8a31:D8A31 BNL   D8A34      ; =+1 [Branch on no link]
8a33:      HLT              ; [Halt]
8a34:D8A34 BM    D8A37      ; =+1 [Branch on minus]
8a36:      HLT              ; [Halt]
8a37:D8A37 INR   Y          ; [Increment Y by 1]
8a39:      BNF   D8A3C      ; =+1 [Branch on no fault]
8a3b:      HLT              ; [Halt]
8a3c:D8A3C IVR   Y          ; [Invert Y]
8a3e:      BNF   D8A41      ; =+1 [Branch on no fault]
8a40:      HLT              ; [Halt]
8a41:D8A41 BNL   D8A44      ; =+1 [Branch on no link]
8a43:      HLT              ; [Halt]
8a44:D8A44 BZ    D8A47      ; =+1 [Branch if zero]
8a46:      HLT              ; [Halt]
8a47:D8A47 IVR   Y          ; [Invert Y]
8a49:      SRR   Y          ; [Arithmetic right shift Y by 1]
8a4b:      BL    D8A4E      ; =+1 [Branch on link]
8a4d:      HLT              ; [Halt]
8a4e:D8A4E BNF   D8A51      ; =+1 [Branch on no fault]
8a50:      HLT              ; [Halt]
8a51:D8A51 BM    D8A54      ; =+1 [Branch on minus]
8a53:      HLT              ; [Halt]
8a54:D8A54 RLR   Y          ; [Left rotate Y by 1]
8a56:      BNF   D8A59      ; =+1 [Branch on no fault]
8a58:      HLT              ; [Halt]
8a59:D8A59 BL    D8A5C      ; =+1 [Branch on link]
8a5b:      HLT              ; [Halt]
8a5c:D8A5C BM    D8A5F      ; =+1 [Branch on minus]
8a5e:      HLT              ; [Halt]
8a5f:D8A5F IVR   Y          ; [Invert Y]
8a61:      BZ    D8A64      ; =+1 [Branch if zero]
8a63:      HLT              ; [Halt]
8a64:D8A64 BNF   D8A67      ; =+1 [Branch on no fault]
8a66:      HLT              ; [Halt]
8a67:D8A67 CLR   X          ; [Clear X]
8a69:      BZ    D8A6C      ; =+1 [Branch if zero]
8a6b:      HLT              ; [Halt]
8a6c:D8A6C INX              ; [Increment X]
8a6d:      BGZ   D8A70      ; =+1 [Branch if greater than zero]
8a6f:      HLT              ; [Halt]
8a70:D8A70 DCX              ; [Decrement X]
8a71:      BZ    D8A74      ; =+1 [Branch if zero]
8a73:      HLT              ; [Halt]
8a74:D8A74 DCX              ; [Decrement X]
8a75:      BM    D8A78      ; =+1 [Branch on minus]
8a77:      HLT              ; [Halt]
8a78:D8A78 INX              ; [Increment X]
8a79:      BZ    D8A7C      ; =+1 [Branch if zero]
8a7b:      HLT              ; [Halt]
8a7c:D8A7C CLA              ; [Clear A]
8a7d:      IVA              ; [Invert A]
8a7e:      SRA              ; [Arithmetic right shift A]
8a7f:      DCA              ; [Decrement A]
8a80:      SLA              ; [Left shift A]
8a81:      INA              ; [Increment A]
8a82:      INA              ; [Increment A]
8a83:      INA              ; [Increment A]
8a84:      INA              ; [Increment A]
8a85:      BZ    D8A88      ; =+1 [Branch if zero]
8a87:      HLT              ; [Halt]
8a88:D8A88 BL    D8A8B      ; =+1 [Branch on link]
8a8a:      HLT              ; [Halt]
8a8b:D8A8B BNF   D8A8E      ; =+1 [Branch on no fault]
8a8d:      HLT              ; [Halt]
8a8e:D8A8E CLA              ; [Clear A]
8a8f:      LDAB= X'AA'      ; =170(-86) ='*' [Load AL with immediate]
8a91:      BNL   D8A94      ; =+1 [Branch on no link]
8a93:      HLT              ; [Halt]
8a94:D8A94 BNF   D8A97      ; =+1 [Branch on no fault]
8a96:      HLT              ; [Halt]
8a97:D8A97 BM    D8A9A      ; =+1 [Branch on minus]
8a99:      HLT              ; [Halt]
8a9a:D8A9A SLRB  AL         ; [Left shift AL by 1]
8a9c:      BL    D8A9F      ; =+1 [Branch on link]
8a9e:      HLT              ; [Halt]
8a9f:D8A9F BF    D8AA2      ; =+1 [Branch on fault]
8aa1:      HLT              ; [Halt]
8aa2:D8AA2 BGZ   D8AA5      ; =+1 [Branch if greater than zero]
8aa4:      HLT              ; [Halt]
8aa5:D8AA5 LDAB= X'00'      ; =0 =NUL [Load AL with immediate]
8aa7:      BZ    D8AAA      ; =+1 [Branch if zero]
8aa9:      HLT              ; [Halt]
8aaa:D8AAA LDBB= X'80'      ; =128(-128) [Load BL with immediate]
8aac:      BL    D8AAF      ; =+1 [Branch on link]
8aae:      HLT              ; [Halt]
8aaf:D8AAF BF    D8AB2      ; =+1 [Branch on fault]
8ab1:      HLT              ; [Halt]
8ab2:D8AB2 BM    D8AB5      ; =+1 [Branch on minus]
8ab4:      HLT              ; [Halt]
8ab5:D8AB5 SLRB  BL         ; [Left shift BL by 1]
8ab7:      BZ    D8ABA      ; =+1 [Branch if zero]
8ab9:      HLT              ; [Halt]
8aba:D8ABA CLA              ; [Clear A]
8abb:      LDA=  X'AAAA'    ; =0xaaaa =43690(-21846) ='*','*' [Load A with immediate]
8abe:      BNL   D8AC1      ; =+1 [Branch on no link]
8ac0:      HLT              ; [Halt]
8ac1:D8AC1 BNF   D8AC4      ; =+1 [Branch on no fault]
8ac3:      HLT              ; [Halt]
8ac4:D8AC4 BM    D8AC7      ; =+1 [Branch on minus]
8ac6:      HLT              ; [Halt]
8ac7:D8AC7 SLR   A          ; [Left shift A by 1]
8ac9:      BL    D8ACC      ; =+1 [Branch on link]
8acb:      HLT              ; [Halt]
8acc:D8ACC BF    D8ACF      ; =+1 [Branch on fault]
8ace:      HLT              ; [Halt]
8acf:D8ACF BGZ   D8AD2      ; =+1 [Branch if greater than zero]
8ad1:      HLT              ; [Halt]
8ad2:D8AD2 LDA=  X'0000'    ; =0x0000 =0 =NUL,NUL [Load A with immediate]
8ad5:      BZ    D8AD8      ; =+1 [Branch if zero]
8ad7:      HLT              ; [Halt]
8ad8:D8AD8 LDX=  X'8000'    ; =0x8000 =32768(-32768) [Load X with immediate]
8adb:      BL    D8ADE      ; =+1 [Branch on link]
8add:      HLT              ; [Halt]
8ade:D8ADE BF    D8AE1      ; =+1 [Branch on fault]
8ae0:      HLT              ; [Halt]
8ae1:D8AE1 BM    D8AE4      ; =+1 [Branch on minus]
8ae3:      HLT              ; [Halt]
8ae4:D8AE4 SLR   X          ; [Left shift X by 1]
8ae6:      BZ    D8AE9      ; =+1 [Branch if zero]
8ae8:      HLT              ; [Halt]
8ae9:D8AE9 LDAB= X'AA'      ; =170(-86) ='*' [Load AL with immediate]
8aeb:      LDBB= X'AA'      ; =170(-86) ='*' [Load BL with immediate]
8aed:      SUBB  AL,BL      ; [AL - BL -> BL]
8aef:      BZ    D8AF2      ; =+1 [Branch if zero]
8af1:      HLT              ; [Halt]
8af2:D8AF2 BL    D8AF5      ; =+1 [Branch on link]
8af4:      HLT              ; [Halt]
8af5:D8AF5 BNF   D8AF8      ; =+1 [Branch on no fault]
8af7:      HLT              ; [Halt]
8af8:D8AF8 LDBB= X'55'      ; =85 [Load BL with immediate]
8afa:      ADDB  BL,AL      ; [BL + AL -> AL]
8afc:      BNL   D8AFF      ; =+1 [Branch on no link]
8afe:      HLT              ; [Halt]
8aff:D8AFF BNF   D8B02      ; =+1 [Branch on no fault]
8b01:      HLT              ; [Halt]
8b02:D8B02 IVAB             ; [Invert AL]
8b03:      BZ    D8B06      ; =+1 [Branch if zero]
8b05:      HLT              ; [Halt]
8b06:D8B06 LDAB= X'AA'      ; =170(-86) ='*' [Load AL with immediate]
8b08:      ORIB  BL,AL      ; [BL | AL -> AL]
8b0a:      BNL   D8B0D      ; =+1 [Branch on no link]
8b0c:      HLT              ; [Halt]
8b0d:D8B0D BNF   D8B10      ; =+1 [Branch on no fault]
8b0f:      HLT              ; [Halt]
8b10:D8B10 IVAB             ; [Invert AL]
8b11:      BZ    D8B14      ; =+1 [Branch if zero]
8b13:      HLT              ; [Halt]
8b14:D8B14 LDAB= X'55'      ; =85 [Load AL with immediate]
8b16:      SF               ; [Set fault]
8b17:      SL               ; [Set link]
8b18:      OREB  BL,AL      ; [BL ^ AL -> AL]
8b1a:      BL    D8B1D      ; =+1 [Branch on link]
8b1c:      HLT              ; [Halt]
8b1d:D8B1D BF    D8B20      ; =+1 [Branch on fault]
8b1f:      HLT              ; [Halt]
8b20:D8B20 BZ    D8B23      ; =+1 [Branch if zero]
8b22:      HLT              ; [Halt]
8b23:D8B23 LDA=  X'5555'    ; =0x5555 =21845 [Load A with immediate]
8b26:      LDB=  X'5555'    ; =0x5555 =21845 [Load B with immediate]
8b29:      SUB   A,B        ; [A - B -> B]
8b2b:      BZ    D8B2E      ; =+1 [Branch if zero]
8b2d:      HLT              ; [Halt]
8b2e:D8B2E BL    D8B31      ; =+1 [Branch on link]
8b30:      HLT              ; [Halt]
8b31:D8B31 BNF   D8B34      ; =+1 [Branch on no fault]
8b33:      HLT              ; [Halt]
8b34:D8B34 LDB=  X'AAAA'    ; =0xaaaa =43690(-21846) ='*','*' [Load B with immediate]
8b37:      ADD   B,A        ; [B + A -> A]
8b39:      BNL   D8B3C      ; =+1 [Branch on no link]
8b3b:      HLT              ; [Halt]
8b3c:D8B3C BNF   D8B3F      ; =+1 [Branch on no fault]
8b3e:      HLT              ; [Halt]
8b3f:D8B3F BM    D8B42      ; =+1 [Branch on minus]
8b41:      HLT              ; [Halt]
8b42:D8B42 IVA              ; [Invert A]
8b43:      BZ    D8B46      ; =+1 [Branch if zero]
8b45:      HLT              ; [Halt]
8b46:D8B46 LDA=  X'5555'    ; =0x5555 =21845 [Load A with immediate]
8b49:      ORI   B,A        ; [B | A -> A]
8b4b:      BNL   D8B4E      ; =+1 [Branch on no link]
8b4d:      HLT              ; [Halt]
8b4e:D8B4E BNF   D8B51      ; =+1 [Branch on no fault]
8b50:      HLT              ; [Halt]
8b51:D8B51 IVA              ; [Invert A]
8b52:      BZ    D8B55      ; =+1 [Branch if zero]
8b54:      HLT              ; [Halt]
8b55:D8B55 LDA=  X'AAAA'    ; =0xaaaa =43690(-21846) ='*','*' [Load A with immediate]
8b58:      SL               ; [Set link]
8b59:      SF               ; [Set fault]
8b5a:      ORE   B,A        ; [B ^ A -> A]
8b5c:      BL    D8B5F      ; =+1 [Branch on link]
8b5e:      HLT              ; [Halt]
8b5f:D8B5F BF    D8B62      ; =+1 [Branch on fault]
8b61:      HLT              ; [Halt]
8b62:D8B62 BZ    D8B65      ; =+1 [Branch if zero]
8b64:      HLT              ; [Halt]
8b65:D8B65 LDA=  X'AA55'    ; =0xaa55 =43605(-21931) [Load A with immediate]
8b68:      XFR   A,B        ; [Transfer A to B]
8b6a:      XFR   A,X        ; [Transfer A to X]
8b6c:      XFR   A,Y        ; [Transfer A to Y]
8b6e:      XFR   A,Z        ; [Transfer A to Z]
8b70:      XFR   Z,S        ; [Transfer Z to S]
8b72:      XFR   Z,C        ; [Transfer Z to C]
8b74:      XFR   Z,A        ; [Transfer Z to A]
8b76:      ADD   B,A        ; [B + A -> A]
8b78:      ADD   X,A        ; [X + A -> A]
8b7a:      ADD   Y,A        ; [Y + A -> A]
8b7c:      SUB   A,Z        ; [A - Z -> Z]
8b7e:      SUB   Z,S        ; [Z - S -> S]
8b80:      SUB   S,C        ; [S - C -> C]
8b82:      SUB   C,B        ; [C - B -> B]
8b84:      BZ    D8B87      ; =+1 [Branch if zero]
8b86:      HLT              ; [Halt]
8b87:D8B87 LDB=  X'55AA'    ; =0x55aa =21930 [Load B with immediate]
8b8a:      OREB  YU,YL      ; [YU ^ YL -> YL]
8b8c:      OREB  YL,YU      ; [YL ^ YU -> YU]
8b8e:      OREB  YU,YL      ; [YU ^ YL -> YL]
8b90:      ORE   Y,B        ; [Y ^ B -> B]
8b92:      BZ    D8B95      ; =+1 [Branch if zero]
8b94:      HLT              ; [Halt]
8b95:D8B95 XFRB  YU,ZL      ; [Transfer YU to ZL]
8b97:      XFRB  YL,ZU      ; [Transfer YL to ZU]
8b99:      OREB  CU,ZU      ; [CU ^ ZU -> ZU]
8b9b:      OREB  CL,ZL      ; [CL ^ ZL -> ZL]
8b9d:      XFR   Z,Z        ; [Transfer Z to Z]
8b9f:      BZ    D8BA2      ; =+1 [Branch if zero]
8ba1:      HLT              ; [Halt]
8ba2:D8BA2 LDA=  X'8000'    ; =0x8000 =32768(-32768) [Load A with immediate]
8ba5:      LDB=  X'0001'    ; =0x0001 =1 [Load B with immediate]
8ba8:      SAB              ; [A - B -> B]
8ba9:      BF    D8BAC      ; =+1 [Branch on fault]
8bab:      HLT              ; [Halt]
8bac:D8BAC BL    D8BAF      ; =+1 [Branch on link]
8bae:      HLT              ; [Halt]
8baf:D8BAF BGZ   D8BB2      ; =+1 [Branch if greater than zero]
8bb1:      HLT              ; [Halt]
8bb2:D8BB2 RF               ; [Reset fault]
8bb3:      SL               ; [Set link]
8bb4:      AAB              ; [A + B -> B]
8bb5:      BNF   D8BB8      ; =+1 [Branch on no fault]
8bb7:      HLT              ; [Halt]
8bb8:D8BB8 BNL   D8BBB      ; =+1 [Branch on no link]
8bba:      HLT              ; [Halt]
8bbb:D8BBB IVR   B          ; [Invert B]
8bbd:      BZ    D8BC0      ; =+1 [Branch if zero]
8bbf:      HLT              ; [Halt]
8bc0:D8BC0 LDA=  X'AAAA'    ; =0xaaaa =43690(-21846) ='*','*' [Load A with immediate]
8bc3:      LDB=  X'5555'    ; =0x5555 =21845 [Load B with immediate]
8bc6:      XAZ              ; [Transfer A to Z]
8bc7:      XAX              ; [Transfer A to X]
8bc8:      NAB              ; [A & B -> B]
8bc9:      BZ    D8BCC      ; =+1 [Branch if zero]
8bcb:      HLT              ; [Halt]
8bcc:D8BCC NAB              ; [A & B -> B]
8bcd:      BZ    D8BD0      ; =+1 [Branch if zero]
8bcf:      HLT              ; [Halt]
8bd0:D8BD0 XFR   Z,B        ; [Transfer Z to B]
8bd2:      XFR   X,A        ; [Transfer X to A]
8bd4:      NAB              ; [A & B -> B]
8bd5:      SUB   X,A        ; [X - A -> A]
8bd7:      BZ    D8BDA      ; =+1 [Branch if zero]
8bd9:      HLT              ; [Halt]
8bda:D8BDA LDA/  X'BFFC'    ; =0xbffc =49148(-16388) ='?','|' [Load A direct]
8bdd:      XAZ              ; [Transfer A to Z]
8bde:      LDA/  X'0026'    ; =0x0026 =38 [Load A direct]
8be1:      BZ    D8BE4      ; =+1 [Branch if zero]
8be3:      HLT              ; [Halt]
8be4:D8BE4 LDB/  X'0024'    ; =0x0024 =36 [Load B direct]
8be7:      BM    D8BEA      ; =+1 [Branch on minus]
8be9:      HLT              ; [Halt]
8bea:D8BEA LDX/  X'0022'    ; =0x0022 =34 [Load X direct]
8bed:      BGZ   D8BF0      ; =+1 [Branch if greater than zero]
8bef:      HLT              ; [Halt]
8bf0:D8BF0 STA/  X'002C'    ; =0x002c =44 [Store A direct]
8bf3:      BZ    D8BF6      ; =+1 [Branch if zero]
8bf5:      HLT              ; [Halt]
8bf6:D8BF6 LDA/  X'002C'    ; =0x002c =44 [Load A direct]
8bf9:      STB/  X'002C'    ; =0x002c =44 [Store B direct]
8bfc:      BM    D8BFF      ; =+1 [Branch on minus]
8bfe:      HLT              ; [Halt]
8bff:D8BFF LDB/  X'002C'    ; =0x002c =44 [Load B direct]
8c02:      STX/  X'002C'    ; =0x002c =44 [Store X direct]
8c05:      BGZ   D8C08      ; =+1 [Branch if greater than zero]
8c07:      HLT              ; [Halt]
8c08:D8C08 LDX/  X'002C'    ; =0x002c =44 [Load X direct]
8c0b:      ORE   X,B        ; [X ^ B -> B]
8c0d:      AAB              ; [A + B -> B]
8c0e:      IVR   B          ; [Invert B]
8c10:      BZ    D8C13      ; =+1 [Branch if zero]
8c12:      HLT              ; [Halt]
8c13:D8C13 LDA/  X'BFFC'    ; =0xbffc =49148(-16388) ='?','|' [Load A direct]
8c16:      XAZ              ; [Transfer A to Z]
8c17:      LDA/  X'0010'    ; =0x0010 =16 [Load A direct]
8c1a:      ADD   Z,A        ; [Z + A -> A]
8c1c:      STA/  X'0010'    ; =0x0010 =16 [Store A direct]
8c1f:      LDA/  X'0012'    ; =0x0012 =18 [Load A direct]
8c22:      ADD   Z,A        ; [Z + A -> A]
8c24:      STA/  X'0012'    ; =0x0012 =18 [Store A direct]
8c27:      LDA/  X'0014'    ; =0x0014 =20 [Load A direct]
8c2a:      ADD   Z,A        ; [Z + A -> A]
8c2c:      STA/  X'0014'    ; =0x0014 =20 [Store A direct]
8c2f:      LDA/  X'0016'    ; =0x0016 =22 [Load A direct]
8c32:      ADD   Z,A        ; [Z + A -> A]
8c34:      STA/  X'0016'    ; =0x0016 =22 [Store A direct]
8c37:      LDA/  X'0018'    ; =0x0018 =24 [Load A direct]
8c3a:      ADD   Z,A        ; [Z + A -> A]
8c3c:      STA/  X'0018'    ; =0x0018 =24 [Store A direct]
8c3f:      LDA$  X'0012'    ; =0x0012 =18 [Load A indirect]
8c42:      BGZ   D8C45      ; =+1 [Branch if greater than zero]
8c44:      HLT              ; [Halt]
8c45:D8C45 LDB$  X'0014'    ; =0x0014 =20 [Load B indirect]
8c48:      BM    D8C4B      ; =+1 [Branch on minus]
8c4a:      HLT              ; [Halt]
8c4b:D8C4B ORE   B,A        ; [B ^ A -> A]
8c4d:      IVA              ; [Invert A]
8c4e:      BZ    D8C51      ; =+1 [Branch if zero]
8c50:      HLT              ; [Halt]
8c51:D8C51 LDA*  P8C6F      ; =+28 [Load A relative indirect]
8c53:      BGZ   D8C56      ; =+1 [Branch if greater than zero]
8c55:      HLT              ; [Halt]
8c56:D8C56 LDB*  P8C71      ; =+25 [Load B relative indirect]
8c58:      BM    D8C5B      ; =+1 [Branch on minus]
8c5a:      HLT              ; [Halt]
8c5b:D8C5B ORE   B,A        ; [B ^ A -> A]
8c5d:      IVA              ; [Invert A]
8c5e:      BZ    D8C61      ; =+1 [Branch if zero]
8c60:      HLT              ; [Halt]
8c61:D8C61 LDA   P8C6F      ; =+12 [Load A relative]
8c63:      LDB   P8C71      ; =+12 [Load B relative]
8c65:      AAB              ; [A + B -> B]
8c66:      LDA=  X'FFBA'    ; =0xffba =65466(-70) [Load A with immediate]
8c69:      AAB              ; [A + B -> B]
8c6a:      BZ    D8C6D      ; =+1 [Branch if zero]
8c6c:      HLT              ; [Halt]
8c6d:D8C6D JMP   D8C73      ; =+4 [Jump relative]
*
8c6f:P8C6F DW    X'0022'    ; =0x0022 =34
8c71:P8C71 DW    X'0024'    ; =0x0024 =36
*
8c73:D8C73 LDX=  X'0020'    ; =0x0020 =32 [Load X with immediate]
8c76:      LDA+  X          ; [Load A from address in X]
8c77:      LDB=  X'FFFF'    ; =0xffff =65535(-1) [Load B with immediate]
8c7a:      SAB              ; [A - B -> B]
8c7b:      BZ    D8C7E      ; =+1 [Branch if zero]
8c7d:      HLT              ; [Halt]
8c7e:D8C7E LDA+  X+         ; [Load A indexed, direct, post-incremented]
8c80:      IVA              ; [Invert A]
8c81:      BZ    D8C84      ; =+1 [Branch if zero]
8c83:      HLT              ; [Halt]
8c84:D8C84 LDA+  X+         ; [Load A indexed, direct, post-incremented]
8c86:      LDB+  X+         ; [Load B indexed, direct, post-incremented]
8c88:      ORE   B,A        ; [B ^ A -> A]
8c8a:      IVA              ; [Invert A]
8c8b:      BZ    D8C8E      ; =+1 [Branch if zero]
8c8d:      HLT              ; [Halt]
8c8e:D8C8E LDA+  X          ; [Load A from address in X]
8c8f:      BZ    D8C92      ; =+1 [Branch if zero]
8c91:      HLT              ; [Halt]
8c92:D8C92 LDA-  X-         ; [Load A indexed, pre-decremented, direct]
8c94:      LDB-  X-         ; [Load B indexed, pre-decremented, direct]
8c96:      ORE   B,A        ; [B ^ A -> A]
8c98:      IVA              ; [Invert A]
8c99:      BZ    D8C9C      ; =+1 [Branch if zero]
8c9b:      HLT              ; [Halt]
8c9c:D8C9C LDB=  X'0024'    ; =0x0024 =36 [Load B with immediate]
8c9f:      LDA+  X          ; [Load A from address in X]
8ca0:      LDX+  B,-2       ; [Load X indexed, displaced, direct]
8ca3:      ORE   X,A        ; [X ^ A -> A]
8ca5:      BZ    D8CA8      ; =+1 [Branch if zero]
8ca7:      HLT              ; [Halt]
8ca8:D8CA8 LDA+  B,-4       ; [Load A indexed, displaced, direct]
8cab:      LDX+  B+,2       ; [Load X indexed, displaced, direct, post-incremented]
8cae:      ADD   X,A        ; [X + A -> A]
8cb0:      IVA              ; [Invert A]
8cb1:      BZ    D8CB4      ; =+1 [Branch if zero]
8cb3:      HLT              ; [Halt]
8cb4:D8CB4 LDA+  B          ; [Load A from address in B]
8cb5:      LDX-  B-,-4      ; [Load X indexed, pre-decremented, displaced, direct]
8cb8:      ORE   X,A        ; [X ^ A -> A]
8cba:      IVA              ; [Invert A]
8cbb:      BZ    D8CBE      ; =+1 [Branch if zero]
8cbd:      HLT              ; [Halt]
8cbe:D8CBE LDX=  X'0010'    ; =0x0010 =16 [Load X with immediate]
8cc1:      LDA+  *X         ; [Load A indexed, indirect]
8cc3:      LDB=  X'FFFF'    ; =0xffff =65535(-1) [Load B with immediate]
8cc6:      SAB              ; [A - B -> B]
8cc7:      BZ    D8CCA      ; =+1 [Branch if zero]
8cc9:      HLT              ; [Halt]
8cca:D8CCA LDA+  *X+        ; [Load A indexed, indirect, post-incremented]
8ccc:      IVA              ; [Invert A]
8ccd:      BZ    D8CD0      ; =+1 [Branch if zero]
8ccf:      HLT              ; [Halt]
8cd0:D8CD0 LDA+  *X+        ; [Load A indexed, indirect, post-incremented]
8cd2:      LDB+  *X+        ; [Load B indexed, indirect, post-incremented]
8cd4:      ORE   B,A        ; [B ^ A -> A]
8cd6:      IVA              ; [Invert A]
8cd7:      BZ    D8CDA      ; =+1 [Branch if zero]
8cd9:      HLT              ; [Halt]
8cda:D8CDA LDA-  *X-        ; [Load A indexed, pre-decremented, indirect]
8cdc:      LDB-  *X-        ; [Load B indexed, pre-decremented, indirect]
8cde:      ORE   B,A        ; [B ^ A -> A]
8ce0:      IVA              ; [Invert A]
8ce1:      BZ    D8CE4      ; =+1 [Branch if zero]
8ce3:      HLT              ; [Halt]
8ce4:D8CE4 LDX=  X'0014'    ; =0x0014 =20 [Load X with immediate]
8ce7:      LDA+  *X         ; [Load A indexed, indirect]
8ce9:      LDB+  *X,-2      ; [Load B indexed, displaced, indirect]
8cec:      ORE   B,A        ; [B ^ A -> A]
8cee:      IVA              ; [Invert A]
8cef:      BZ    D8CF2      ; =+1 [Branch if zero]
8cf1:      HLT              ; [Halt]
8cf2:D8CF2 LDA+  *X,-4      ; [Load A indexed, displaced, indirect]
8cf5:      LDB+  *X+,2      ; [Load B indexed, displaced, indirect, post-incremented]
8cf8:      ADD   B,A        ; [B + A -> A]
8cfa:      IVA              ; [Invert A]
8cfb:      BZ    D8CFE      ; =+1 [Branch if zero]
8cfd:      HLT              ; [Halt]
8cfe:D8CFE LDA+  *X         ; [Load A indexed, indirect]
8d00:      LDB-  *X-,-4     ; [Load B indexed, pre-decremented, displaced, indirect]
8d03:      ORE   B,A        ; [B ^ A -> A]
8d05:      IVA              ; [Invert A]
8d06:      BZ    D8D09      ; =+1 [Branch if zero]
8d08:      HLT              ; [Halt]
8d09:D8D09 PCX              ; [Transfer PC to X]
8d0a:      LDA=  X'050A'    ; =0x050a =1290 [Load A with immediate]
8d0d:      ADD   Z,A        ; [Z + A -> A]
8d0f:      SUB   A,X        ; [A - X -> X]
8d11:      BZ    D8D14      ; =+1 [Branch if zero]
8d13:      HLT              ; [Halt]
8d14:D8D14 LDA=  X'003A'    ; =0x003a =58 [Load A with immediate]
8d17:      XAS              ; [Transfer A to S]
8d18:      LDX=  X'2020'    ; =0x2020 =8224 [Load X with immediate]
8d1b:      JSR   F8D23      ; =+6 [Jump to subroutine relative]
8d1d:      DW    X'0101'    ; =0x0101 =257
8d1f:      DB    X'00'      ; =0x00 =0 =NUL
8d20:      JMP   D8D38      ; =+22 [Jump relative]
*
8d22:      DB    X'00'      ; =0x00 =0 =NUL
*
* Function F8D23
*
8d23:F8D23 LDA+  X+         ; [Load A indexed, direct, post-incremented]
8d25:      LDB=  X'0101'    ; =0x0101 =257 [Load B with immediate]
8d28:      ORE   B,A        ; [B ^ A -> A]
8d2a:      BZ    D8D2D      ; =+1 [Branch if zero]
8d2c:      HLT              ; [Halt]
8d2d:D8D2D LDA+  S          ; [Load A from address in S]
8d2e:      LDB=  X'2020'    ; =0x2020 =8224 [Load B with immediate]
8d31:      ORE   B,A        ; [B ^ A -> A]
8d33:      BZ    D8D36      ; =+1 [Branch if zero]
8d35:      HLT              ; [Halt]
8d36:D8D36 INX              ; [Increment X]
8d37:      RSR              ; [Return from subroutine]
*
8d38:D8D38 LDX=  X'09EF'    ; =0x09ef =2543 [Load X with immediate]
8d3b:      LDA=  X'11FF'    ; =0x11ff =4607 [Load A with immediate]
8d3e:      STA+  X+         ; [Store A indexed, direct, post-incremented]
8d40:      XFR   X,B        ; [Transfer X to B]
8d42:      LDA=  X'09F1'    ; =0x09f1 =2545 [Load A with immediate]
8d45:      SAB              ; [A - B -> B]
8d46:      BZ    D8D49      ; =+1 [Branch if zero]
8d48:      HLT              ; [Halt]
8d49:D8D49 LDX=  X'09EF'    ; =0x09ef =2543 [Load X with immediate]
8d4c:      LDA+  X+         ; [Load A indexed, direct, post-incremented]
8d4e:      LDB=  X'11FF'    ; =0x11ff =4607 [Load B with immediate]
8d51:      SUBB  AU,BU      ; [AU - BU -> BU]
8d53:      BZ    D8D56      ; =+1 [Branch if zero]
8d55:      HLT              ; [Halt]
8d56:D8D56 SABB             ; [AL - BL -> BL]
8d57:      BZ    D8D5A      ; =+1 [Branch if zero]
8d59:      HLT              ; [Halt]
8d5a:D8D5A LDA=  X'6066'    ; =0x6066 =24678 [Load A with immediate]
8d5d:      DMA   SAD,A      ; [Store A register to DMA address register]
8d5f:      DMA   RAD,B      ; [Read DMA address register to B register]
8d61:      SAB              ; [A - B -> B]
8d62:      BZ    D8D65      ; =+1 [Branch if zero]
8d64:      HLT              ; [Halt]
8d65:D8D65 LDA=  X'4611'    ; =0x4611 =17937 [Load A with immediate]
8d68:      DMA   SCT,A      ; [Store A register to DMA count register]
8d6a:      DMA   RCT,B      ; [Read DMA count register to B register]
8d6c:      SAB              ; [A - B -> B]
8d6d:      BZ    D8D70      ; =+1 [Branch if zero]
8d6f:      HLT              ; [Halt]
8d70:D8D70 LDAB/ X'F200'    ; =0xf200 =61952(-3584) ='r',NUL [Load AL direct]
8d73:      SRAB             ; [Arithmetic right shift AL]
8d74:      BNL   D8D8E      ; =+24 [Branch on no link]
8d76:      LDAB/ X'F201'    ; =0xf201 =61953(-3583) [Load AL direct]
8d79:      LDBB= X'80'      ; =128(-128) [Load BL with immediate]
8d7b:      ORIB  BL,AL      ; [BL | AL -> AL]
8d7d:      LDBB= X'83'      ; =131(-125) [Load BL with immediate]
8d7f:      SABB             ; [AL - BL -> BL]
8d80:      BNZ   D8D8E      ; =+12 [Branch if not zero]
8d82:      LDX/  X'BFFE'    ; =0xbffe =49150(-16386) ='?','~' [Load X direct]
8d85:      LDA/  X'BFFC'    ; =0xbffc =49148(-16388) ='?','|' [Load A direct]
8d88:      LDB=  X'0774'    ; =0x0774 =1908 [Load B with immediate]
8d8b:      AAB              ; [A + B -> B]
8d8c:      JMP+  B          ; [Jump indexed, direct]
8d8e:D8D8E STAB/ X'F10A'    ; =0xf10a =61706(-3830) [Store AL direct]
8d91:      LDA=  X'BFFC'    ; =0xbffc =49148(-16388) ='?','|' [Load A with immediate]
8d94:      XAS              ; [Transfer A to S]
8d95:      LDA+  S+         ; [Load A indexed, direct, post-incremented]
8d97:      XAZ              ; [Transfer A to Z]
8d98:      LDX+  S+         ; [Load X indexed, direct, post-incremented]
8d9a:      LDA=  X'007D'    ; =0x007d =125 [Load A with immediate]
8d9d:      ADD   Z,A        ; [Z + A -> A]
8d9f:      JMP+  A          ; [Jump indexed, direct]
*
8da1:      DB    X'05'      ; =0x05 =5
8da2:      DC    '1'        ; hex:b1 dec:177(-79)
8da3:      DB    X'05'      ; =0x05 =5
8da4:      DC    '3'        ; hex:b3 dec:179(-77)
8da5:      DB    X'05'      ; =0x05 =5
8da6:      DC    '5'        ; hex:b5 dec:181(-75)
8da7:      DB    X'05'      ; =0x05 =5
8da8:      DC    '7'        ; hex:b7 dec:183(-73)
8da9:      DB    X'05'      ; =0x05 =5
8daa:      DC    '9'        ; hex:b9 dec:185(-71)
8dab:      DB    X'00'      ; =0x00 =0 =NUL
8dac:      DB    0,5        ; =0x00,0x0005
8db1:      DW    X'FFFF'    ; =0xffff =65535(-1)
8db3:      DW    X'5555'    ; =0x5555 =21845
8db5:      DC    '**'       ; hex:aaaa dec:43690(-86)
8db7:      DB    X'00'      ; =0x00 =0 =NUL
8db8:      DB    X'00'      ; =0x00 =0 =NUL
8db9:      DW    X'8001'    ; =0x8001 =32769(-32767)
*
8dbb:      LDA=  X'07CC'    ; =0x07cc =1996 [Load A with immediate]
8dbe:      ADD   Z,A        ; [Z + A -> A]
8dc0:      JSR+  A          ; [Jump to subroutine indexed, direct]
8dc2:      DW    X'9B9C'    ; =0x9b9c =39836(-25700)
8dc4:      DB    X'8C'      ; =0x8c =140(-116) =FF
8dc5:      DC    'CPU-6 MAPPING RAM TEST, CONTROL-C TO EXIT'
8dee:      DB    X'8D'      ; =0x8d =141(-115) =CR
8def:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8df1:      CLRB  BL,2       ; [Set BL to 2]
8df3:      BNZ   D8E2F      ; =+58 [Branch if not zero]
8df5:      LDA=  X'07CC'    ; =0x07cc =1996 [Load A with immediate]
8df8:      ADD   Z,A        ; [Z + A -> A]
8dfa:      JSR+  A          ; [Jump to subroutine indexed, direct]
8dfc:      DW    X'8D8A'    ; =0x8d8a =36234(-29302) =CR,LF
8dfe:      DC    '*** THIS TEST WILL NOT RUN ON CPU-5 ***'
8e25:      DB    X'8D'      ; =0x8d =141(-115) =CR
8e26:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8e28:      LDA=  X'078A'    ; =0x078a =1930 [Load A with immediate]
8e2b:      ADD   Z,A        ; [Z + A -> A]
8e2d:      JMP+  A          ; [Jump indexed, direct]
8e2f:D8E2F LDA=  X'06D9'    ; =0x06d9 =1753 [Load A with immediate]
8e32:      ADD   Z,A        ; [Z + A -> A]
8e34:      JSR+  A          ; [Jump to subroutine indexed, direct]
8e36:      MVF   (256)/X'0100',/X'0200' ; =0x0100 =256,=0x0200 =512 [Move fixed-length, direct, direct]
8e3d:      JSR   F8E75      ; =+54 [Jump to subroutine relative]
8e3f:      DB    X'01'      ; =0x01 =1
8e40:      JSR   F8E75      ; =+51 [Jump to subroutine relative]
8e42:      DB    X'02'      ; =0x02 =2
8e43:      JSR   F8E75      ; =+48 [Jump to subroutine relative]
8e45:      DB    X'03'      ; =0x03 =3
8e46:      JSR   F8E75      ; =+45 [Jump to subroutine relative]
8e48:      DB    X'04'      ; =0x04 =4
8e49:      JSR   F8E75      ; =+42 [Jump to subroutine relative]
8e4b:      DB    X'05'      ; =0x05 =5
8e4c:      JSR   F8E75      ; =+39 [Jump to subroutine relative]
8e4e:      DB    X'06'      ; =0x06 =6
8e4f:      JSR   F8E75      ; =+36 [Jump to subroutine relative]
8e51:      DB    X'07'      ; =0x07 =7
8e52:      JSR   F8EA7      ; =+83 [Jump to subroutine relative]
8e54:      JSR   F8E75      ; =+31 [Jump to subroutine relative]
8e56:      DB    X'00'      ; =0x00 =0 =NUL
8e57:      JSR   F8ECC      ; =+115 [Jump to subroutine relative]
8e59:      STAB/ X'F10A'    ; =0xf10a =61706(-3830) [Store AL direct]
8e5c:      LDAB/ X'F200'    ; =0xf200 =61952(-3584) ='r',NUL [Load AL direct]
8e5f:      SRAB             ; [Arithmetic right shift AL]
8e60:      BNL   D8E2F      ; =-51 [Branch on no link]
8e62:      LDAB/ X'F201'    ; =0xf201 =61953(-3583) [Load AL direct]
8e65:      LDBB= X'80'      ; =128(-128) [Load BL with immediate]
8e67:      ORIB  BL,AL      ; [BL | AL -> AL]
8e69:      LDBB= X'83'      ; =131(-125) [Load BL with immediate]
8e6b:      SABB             ; [AL - BL -> BL]
8e6c:      BNZ   D8E2F      ; =-63 [Branch if not zero]
8e6e:      LDA=  X'0774'    ; =0x0774 =1908 [Load A with immediate]
8e71:      ADD   Z,A        ; [Z + A -> A]
8e73:      JMP+  A          ; [Jump indexed, direct]
*
* Function F8E75
*
8e75:F8E75 CLA              ; [Clear A]
8e76:      LDAB+ X+         ; [Load AL indexed, direct, post-incremented]
8e78:      SLR   A,5        ; [Left shift A by 5]
8e7a:      INRB  AU         ; [Increment AU by 1]
8e7c:      STK   X,6        ; [Push X Y Z to the stack]
8e7e:      XAY              ; [Transfer A to Y]
8e7f:      XAZ              ; [Transfer A to Z]
8e80:      INRB  ZU         ; [Increment ZU by 1]
8e82:      LDX=  X'0020'    ; =0x0020 =32 [Load X with immediate]
8e85:D8E85 LDB=  X'0100'    ; =0x0100 =256 [Load B with immediate]
8e88:D8E88 LDAB+ Y          ; [Load AL from address in Y]
8e89:      INAB             ; [Increment AL]
8e8a:      STAB+ Y          ; [Store AL to address in Y]
8e8b:      STAB+ Z          ; [Store AL to address in Z]
8e8c:      JSR   F8F04      ; =+118 [Jump to subroutine relative]
8e8e:      JSR   F8ED9      ; =+73 [Jump to subroutine relative]
8e90:      CPF   (256)/X'0100',/X'0200' ; =0x0100 =256,=0x0200 =512 [Compare fixed-length, direct, direct]
8e97:      BNZ   D8F02      ; =+105 [Branch if not zero]
8e99:      DCR   B          ; [Decrement B by 1]
8e9b:      BNZ   D8E88      ; =-21 [Branch if not zero]
8e9d:      INR   Y          ; [Increment Y by 1]
8e9f:      INR   Z          ; [Increment Z by 1]
8ea1:      DCX              ; [Decrement X]
8ea2:      BNZ   D8E85      ; =-31 [Branch if not zero]
8ea4:      POP   X,6        ; [Pop Z Y X from the stack]
8ea6:      RSR              ; [Return from subroutine]
*
* Function F8EA7
*
8ea7:F8EA7 STM   =X'F8',/X'0300' ; =0x0300 =768 [Store 32 entries of map 0, literal=248, direct]
8eac:      LDM   =X'F9',/X'0300' ; =0x0300 =768 [Load 32 entries to map 1, literal=249, direct]
8eb1:      LDAB= X'01'      ; =1 [Load AL with immediate]
8eb3:D8EB3 STAB- S-         ; [Store AL indexed, pre-decremented, direct]
8eb5:      CLAB             ; [Clear AL]
8eb6:      STAB- S-         ; [Store AL indexed, pre-decremented, direct]
8eb8:      STX-  S-         ; [Store X indexed, pre-decremented, direct]
8eba:      STAB- S-         ; [Store AL indexed, pre-decremented, direct]
8ebc:      LDX=  X'06C2'    ; =0x06c2 =1730 [Load X with immediate]
8ebf:      ADD   Z,X        ; [Z + X -> X]
8ec1:      RSV              ; [Return from service call]
*
8ec2:      JSR   F8ED9      ; =+21 [Jump to subroutine relative]
8ec4:      MVF   (256)/X'0100',/X'0200' ; =0x0100 =256,=0x0200 =512 [Move fixed-length, direct, direct]
8ecb:      RSR              ; [Return from subroutine]
*
* Function F8ECC
*
8ecc:F8ECC STM   =X'F9',/X'0300' ; =0x0300 =768 [Store 32 entries of map 1, literal=249, direct]
8ed1:      LDM   =X'F8',/X'0300' ; =0x0300 =768 [Load 32 entries to map 0, literal=248, direct]
8ed6:      CLAB             ; [Clear AL]
8ed7:      JMP   D8EB3      ; =-38 [Jump relative]
*
* Function F8ED9
*
8ed9:F8ED9 STM   =X'F8',/X'0100' ; =0x0100 =256 [Store 32 entries of map 0, literal=248, direct]
8ede:      STM   =X'F9',/X'0120' ; =0x0120 =288 [Store 32 entries of map 1, literal=249, direct]
8ee3:      STM   =X'FA',/X'0140' ; =0x0140 =320 [Store 32 entries of map 2, literal=250, direct]
8ee8:      STM   =X'FB',/X'0160' ; =0x0160 =352 [Store 32 entries of map 3, literal=251, direct]
8eed:      STM   =X'FC',/X'0180' ; =0x0180 =384 [Store 32 entries of map 4, literal=252, direct]
8ef2:      STM   =X'FD',/X'01A0' ; =0x01a0 =416 [Store 32 entries of map 5, literal=253, direct]
8ef7:      STM   =X'FE',/X'01C0' ; =0x01c0 =448 [Store 32 entries of map 6, literal=254, direct]
8efc:      STM   =X'FF',/X'01E0' ; =0x01e0 =480 [Store 32 entries of map 7, literal=255, direct]
8f01:      RSR              ; [Return from subroutine]
*
8f02:D8F02 JMP   D8F2D      ; =+41 [Jump relative]
*
* Function F8F04
*
8f04:F8F04 LDM   =X'F8',/X'0100' ; =0x0100 =256 [Load 32 entries to map 0, literal=248, direct]
8f09:      LDM   =X'F9',/X'0120' ; =0x0120 =288 [Load 32 entries to map 1, literal=249, direct]
8f0e:      LDM   =X'FA',/X'0140' ; =0x0140 =320 [Load 32 entries to map 2, literal=250, direct]
8f13:      LDM   =X'FB',/X'0160' ; =0x0160 =352 [Load 32 entries to map 3, literal=251, direct]
8f18:      LDM   =X'FC',/X'0180' ; =0x0180 =384 [Load 32 entries to map 4, literal=252, direct]
8f1d:      LDM   =X'FD',/X'01A0' ; =0x01a0 =416 [Load 32 entries to map 5, literal=253, direct]
8f22:      LDM   =X'FE',/X'01C0' ; =0x01c0 =448 [Load 32 entries to map 6, literal=254, direct]
8f27:      LDM   =X'FF',/X'01E0' ; =0x01e0 =480 [Load 32 entries to map 7, literal=255, direct]
8f2c:      RSR              ; [Return from subroutine]
*
8f2d:D8F2D POP   X,6        ; [Pop Z Y X from the stack]
8f2f:      LDX+  S+         ; [Load X indexed, direct, post-incremented]
8f31:      LDA=  X'07CC'    ; =0x07cc =1996 [Load A with immediate]
8f34:      ADD   Z,A        ; [Z + A -> A]
8f36:      JSR+  A          ; [Jump to subroutine indexed, direct]
8f38:      DW    X'8D8A'    ; =0x8d8a =36234(-29302) =CR,LF
8f3a:      DC    '*** MAP RAM ERROR ***'
8f4f:      DB    X'8D'      ; =0x8d =141(-115) =CR
8f50:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8f52:      STAB/ X'F10B'    ; =0xf10b =61707(-3829) [Store AL direct]
8f55:      STAB/ X'F10C'    ; =0xf10c =61708(-3828) [Store AL direct]
8f58:      LDA=  X'078A'    ; =0x078a =1930 [Load A with immediate]
8f5b:      ADD   Z,A        ; [Z + A -> A]
8f5d:      JMP+  A          ; [Jump indexed, direct]
*
* Function ENTRY
*
8f5f:ENTRY XFR   Z,Y        ; [Transfer Z to Y]
8f61:      CLA              ; [Clear A]
8f62:D8F62 LDAB+ Y+         ; [Load AL indexed, direct, post-incremented]
8f64:      ADDB  AL,AU      ; [AL + AU -> AU]
8f66:      LDB=  X'07DD'    ; =0x07dd =2013 [Load B with immediate]
8f69:      ADD   Z,B        ; [Z + B -> B]
8f6b:      SUB   Y,B        ; [Y - B -> B]
8f6d:      BNZ   D8F62      ; =-13 [Branch if not zero]
8f6f:      LDAB+ Y          ; [Load AL from address in Y]
8f70:      SUBB  AU,AL      ; [AU - AL -> AL]
8f72:      BNZ   D8FA6      ; =+50 [Branch if not zero]
8f74:      JSR   F8FCC      ; =+86 [Jump to subroutine relative]
8f76:      DW    X'8D8A'    ; =0x8d8a =36234(-29302) =CR,LF
8f78:      DC    '*** PASS ***'
8f84:      DB    X'8D'      ; =0x8d =141(-115) =CR
8f85:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8f87:      STAB/ X'F10A'    ; =0xf10a =61706(-3830) [Store AL direct]
8f8a:D8F8A JSR   F8FCC      ; =+64 [Jump to subroutine relative]
8f8c:      DC    'PRESS SPACE'
8f97:      DW    X'878D'    ; =0x878d =34701(-30835) =BEL,CR
8f99:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
*
8f9b:D8F9B LDAB/ X'F200'    ; =0xf200 =61952(-3584) ='r',NUL [Load AL direct]
8f9e:      SRAB             ; [Arithmetic right shift AL]
8f9f:      BNL   D8F9B      ; =-6 [Branch on no link]
8fa1:      LDAB/ X'F201'    ; =0xf201 =61953(-3583) [Load AL direct]
8fa4:      JMP+  X          ; [Jump indexed, direct]
8fa6:D8FA6 JSR   F8FCC      ; =+36 [Jump to subroutine relative]
8fa8:      DW    X'8D8A'    ; =0x8d8a =36234(-29302) =CR,LF
8faa:      DC    '*** CHECK SUM ERROR ***'
8fc1:      DB    X'8D'      ; =0x8d =141(-115) =CR
8fc2:      DW    X'8A00'    ; =0x8a00 =35328(-30208) =LF,NUL
8fc4:      STAB/ X'F10B'    ; =0xf10b =61707(-3829) [Store AL direct]
8fc7:      STAB/ X'F10C'    ; =0xf10c =61708(-3828) [Store AL direct]
8fca:      JMP   D8F8A      ; =-66 [Jump relative]
*
* Function F8FCC
*
8fcc:F8FCC LDAB/ X'F200'    ; =0xf200 =61952(-3584) ='r',NUL [Load AL direct]
8fcf:      SRAB             ; [Arithmetic right shift AL]
8fd0:      SRAB             ; [Arithmetic right shift AL]
8fd1:      BNL   F8FCC      ; =-7 [Branch on no link]
8fd3:      LDAB+ X+         ; [Load AL indexed, direct, post-incremented]
8fd5:      BNZ   D8FD8      ; =+1 [Branch if not zero]
8fd7:      RSR              ; [Return from subroutine]
*
8fd8:D8FD8 STAB/ X'F201'    ; =0xf201 =61953(-3583) [Store AL direct]
8fdb:      JMP   F8FCC      ; =-17 [Jump relative]
*
8fdd:      DW    X'8200'    ; =0x8200 =33280(-32256)
8fdf:      DB    0,33       ; =0x00,0x0021
9000:ENDPT
